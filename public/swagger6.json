{
    "swagger": "2.0",
    "info": {
      "version": "1.0",
      "title": "Open Banking Nigeria",
      "description": "The Open Banking Nigeria API specifications allow Nigerian financial institutions, FIs, (e.g., banks, mobile money operators, ATM providers) to develop API endpoints that can then be accessed by API users (e.g., third-party developers, fintechs) to build mobile and web applications for their customers.\n\nThese specifications allow FIs to provide a standardized interface that will enable fintechs and other stakeholders to access their products and services. For example, let customers to see all their accounts across multiple banks or to give instructions such that their accounts can be debited to pay for equities being bought on their behalf by their stock brokers.\n\nThe Open Banking Nigeria API is currently under development. Suggestions and comments are welcomed. To contribute or know more, kindly email contact@openbanking.ng. \n\n---\n\n# What Open Banking will Achieve\nOpen Banking Nigeria allows account holders to seamlessly and securely link their bank account information with their platform or apps of choice.\n\nThrough the Open Banking API, a fintech can quickly create secure and personalized products and apps for its customers. While you can get access to our sandbox to start testing Open Banking in minutes, you would need to connect with real banks to be able to do real-life transactions.\n\nAll data presented here are dummy values.\n\nTo know more about Open Banking Nigeria and its advocacy to get Nigerian banks to adopt the same API standard, please visit the [Open Banking Nigeria website](https://openbanking.ng).\n\n---\n\n# Environments\nWe will provide multiple sandboxes that allow you to explore, develop and integrate with your applications, before progressing to test against your partner banks. Kindly note the following specifications:\n\n| Environment      | What's it for? | \n| :---        |    :----:   |\n| Postman      | Request a token to explore our API, make requests and receive responses with the Postman mock server       |\n| Sandbox   | Request a token to explore the API set, make and receive data from a dummy banking setup        |\n\n---\n\n# Authentication\nAuthentication to the Open Banking API is performed via Bearer Authentication. Every endpoint requires authentication, so you will need to add the following header to each request:\n\n`Authorization: Bearer <APIKey>`\n\n---\n\n# Implementation Phases\nThe standard we are developing can get complicated pretty quickly. Therefore, we have taken the liberty to phase the implementation across two phases. \n\nThe first phase of version 1 (v1) covers meta, branches, ATMs, customers, accounts, and the ability to send money between accounts.\n\nThe second phase focuses on the complete transaction universe that a bank may want to implement.\n\n---\n\n# Data Types\nAll of the Open Banking Nigeria API responses returned are in JSON format, with these data types defined below:\n\n|Type    | Description|\n| ----------- | ----------- |\n|string    | A UTF-8 encoded string|\n|number    | An integer|\n|datetime    | An ISO8601 encoded DateTime. All datetimes are returned in UTC with offset +00:00 |\n|decimal    | All monetary values are returned with up to two decimal places and may be positive (20.78) or negative (-32.50) |\n\n\n# Data Length\n\n|Type    | Description|Length\n| ----------- | ----------- | ----------- |\n|Text fields    |string| max-length 255 characters\n|BVN    |integers starting with 1 or 2 |11 digits.\n|Account Number    | integers | 10 digits.\n\n\n---\n\n# Paging\nFor endpoints that provide several records, the response may be paged depending on the total number of records that the server can return at a time. This means that to retrieve the full set of items for a given resource you may be required to make several requests.\n\n## URL Parameters\n| Parameters | Description |\n|-------------|-------------|    \n|page|    The page number you wish to retrieve|\n|limit|The number of items to return in a page|\n|signature|Used to guarantee consistency of the data being returned|\n\n## Response\n| Field    | Type | Description\n|-------------|-------------|-------------|    \n|data|array|The actual data items you have requested|\n|_meta|object|Key/value information that is not essential to understanding the resources returned but offers additional detail|\n|_links|array|A collection of links that you can use to navigate the paged data|\n\n## _meta\n| Field    | Type | Description\n|-------------|-------------|-------------|    \n|totalNumberOfRecords |number |The total number of data items in the collection |\n|totalNumberOfPages |number |The number of pages in the collection |\n|pageNumber |number | The current page number|\n| pageSize|number |The current page size |\n\n## _links\n| Field    | Type | Description\n|-------------|-------------|-------------|    \n|rel|string|The relation of the linked resource to the current resource |\n|href|string|The absolute URI of the related resource |\n\n## Navigating through pages\n* If you are on the first page, the \"prev\" link will not be present in the response.\n* If you are at the final page, the \"next\" link will not be present in the response\n* If there are no pages and all data is returned neither \"prev\" or \"next\" links will be present in the response\n\n---\n\n# Errors\nErrors in the Open Banking Nigeria API are expressed as a combination of HTTP status codes and an accompanying JSON body providing required detail where possible. You should be able to rely on the HTTP status code alone to determine the cause of the problem.\n\n## Error Response Fields\n\n| Field    | Type |\n|-------------|-------------|    \n| message    | `string`    A human-readable message as to the specifics of the problem. For example, it may contain a detail description of what caused the problem |\n| status number | The HTTP status code used in the response |\n| errorCode    number    | The specific Open Banking Nigeria error code for the problem\n\n---\n\n# Expansion Fields\nThe Open Banking API standard has been designed to be flexible enough to allow banks and other financial institutions to layer on additional data fields. This would help to pass on proprietary information not common to all banks or additional processing directives unique to the specific bank.\n\nThe `expansionFields` are optional and are a collection which means multiple instances of these fields may be included in any message.\n\n## Response Body Fields\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|id| string | A unique identifier for the extra field |\n|description| string | A description of the extra field |\n|type| string | A type of field but defined by the bank |\n|value| string | The value of the extra field |\n\nFor this documentation, the `expansionFields` will not be included in the Response Body Fields\n\n---\n# Response Code\nFind in the table below the possible response codes usually formatted as `status` and their respective descriptions. They follow the `8583 standards`.\n\n| Code | Description |\n| ----------- | ----------- |\n| 00 | Approved or completed successfully |\n| 01 | Status unknown, please wait for settlement report |\n| 03 | Invalid Sender |\n| 05 | Do not honor |\n| 06 | Dormant Account |\n| 07 | Invalid Account |\n| 08 | Account Name Mismatch |\n| 09 | Request processing in progress |\n| 12 | Invalid transaction |\n| 13 | Invalid Amount |\n| 14 | Invalid Batch Number |\n| 15 | Invalid Session or Record ID |\n| 16 | Unknown Bank Code |\n| 17 | Invalid Channel |\n| 18 | Wrong Method Call |\n| 21 | No action is taken |\n| 25 | Unable to locate record |\n| 26 | Duplicate record |\n| 30 | Format error |\n| 34 | Suspected fraud |\n| 35 | Contact sending bank |\n| 51 | No sufficient funds |\n| 57 | Transaction not permitted to sender |\n| 58 | Transaction not permitted on channel |\n| 61 | Transfer limit Exceeded |\n| 63 | Security violation |\n| 65 | Exceeds withdrawal frequency |\n| 68 | Response received too late |\n| 69 | Unsuccessful Account/Amount block |\n| 70 | Unsuccessful Account/Amount unblock |\n| 71 | Empty Mandate Reference Number |\n| 91 | Beneficiary Bank not available |\n| 92 | Routing error |\n| 94 | Duplicate transaction |\n| 96 | System malfunction |\n| 97 | Timeout waiting for a response from destination |\n\n---\n# Idempotency\nOpen Banking Nigeria API supports idempotency for safely retrying `POST` transactions without accidentally performing the same operation twice. This is useful when an API call is disrupted, and you do not receive a response. For example, `request_time_out` or `response_received_too_late`. Therefore, if you do not get a response message for a transaction, you can retry the request with the same idempotency key, and you are guaranteed that no more than one transaction would be posted.\n\nTo perform an idempotent request, provide an additional Idempotency-Key: <key> header to the request.\n\nOpen Banking Nigeria idempotency works by saving the resulting status code and body of the first request made for any given idempotency key, regardless of whether it succeeded or failed. Subsequent requests with the same key should return the same result, including Server (`500`) errors.\n\nAn idempotency key is a unique value generated by the Service Provide which the server uses to recognize subsequent transaction retries of the same request. It is up to the Service Provider to determine how these idempotency keys would be generated. Whatever it is, it must have enough entropy to avoid collisions.\n\nIdempotency keys would never expire, so a new request that is generated if a key is reused outside of that time frame would fail.\n\nResults are only saved if an API endpoint started executing. If incoming parameters failed validation, or the request conflicted with another that was executing concurrently, no idempotent result is saved because no API endpoint began execution. It is safe to retry these requests.\n\nAll `POST` requests accept idempotency keys and all transaction API calls must have idempotency keys. Sending idempotency keys in `GET` and `DELETE` requests has no effect and should be avoided, as these requests are idempotent by definition.",
      "contact": {}
    },
    "host": "obsandbox.herokuapp.com",
    "basePath": "/",
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemes": [
      "https"
    ],
  "security":[{
            "Bearer":[]
          }],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/v1/meta/information": {
        "get": {
          "description": "This endpoint retrieves the general information about a bank or financial service provider. \r\n\r\n## Response Body Fields\r\n\r\n|Field|Type|Description|\r\n| ----------- | ----------- | ----------- |\r\n|bankName| string |`Required` The full legal name of the bank. |\r\n|description| string |`Required` A general description about the bank’s business. This is a marketing information |\r\nLocation| |`Required` |\r\n|street| string |`Required` The street address |\r\n|city| string |`Required` City |\r\n|state| string |`Required` State |\r\n|country| string |`Required` Country code in the `ISO 3166-1 alpha-2`|\r\n|latitude | number |`Optional` Geographic coordinate|\r\n|longitude | number |`Optional`  Geographic coordinate|\r\n|swiftCode| string |`Required` International Swift code used for cross-border routing of transactions |,\r\n|nibssCode| string |`Required` 6 digit unique code given by [NIBSS](https://nibss-plc.com) for local routing of interbank transfers |,\r\n|cbnBankCode| string |`Required` 3 digital unique code given by the Central Bank of Nigeria |,\r\n|numberOfBranches|number |`Required`Number of branches|\r\n|incorporationDate| string |`Required` The date that the bank was incorporated |,\r\n|rcNumber| string |`Required` The incoroporation number |,\r\n|website| string |`Required` Website of the bank in full http address |,\r\n|bankCategory| string |`Required` Categorization by CBN. Options are `National` `Regional` `International` |,\r\n|logo| string |`Required` Full URL to the image file where the logo can be found |,\r\n|contactInfo| |`Required` A collection of contact information fields|\r\n|description| string |`Required` A description of the contact information type such as `Customer Service Email`, `Direct Switch Board Number` |\r\n|type| string |`Required` Type of contact information such as `email`, `telephone`, `telex` |\r\n|value| string |`Required` The contact information handle |\r\n|socialMedia | |`Optional` A collection of social media handles |\r\n|description| string |`Required` The name of the social media platform such as `Facebook`, `LinkedIn`, `Instagram` |\r\n|type| string |`Required` The type of social media field such as `FB`, `IG`, etc. |\r\n|value| string |`Required` The social media handle or direct URL to the page |\r\n",
          "summary": "General Information About Bank",
          "tags": [
            "Meta"
          ],
          "operationId": "V1MetaInformationGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GeneralInformation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "bankName": "ABC Bank Plc.",
                    "description": "The number one bank",
                    "location": {
                      "street": "123 Somewhere Street, Victoria Island",
                      "city": "Lagos",
                      "state": "Lagos",
                      "country": "NG",
                      "geoLocation": {
                        "latitude": 7.332014,
                        "longitude": 3.86888
                      }
                    },
                    "swiftCode": "ABCNGLA",
                    "nibssCode": "000123",
                    "cbnBankCode": "123",
                    "numberOfBranches": 300,
                    "incorporationDate": "2000-12-01",
                    "rcNumber": "RC000123",
                    "website": "https://www.abcbank.ng",
                    "bankCategory": "National",
                    "logo": "https://images.abcbank.ng/wp-content/randomupload/logo.png",
                    "contactInfo": [
                      {
                        "description": "Customer support email",
                        "type": "email",
                        "value": "support@abcbank.ng"
                      }
                    ],
                    "socialMedia": [
                      {
                        "description": "Instagram",
                        "type": "IG",
                        "value": "@abcbank"
                      },
                      {
                        "description": "Facebook",
                        "type": "FB",
                        "value": "@abcbank"
                      }
                    ],
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/meta/version": {
        "get": {
          "description": "This endpoint retrieves the the current version that a bank has implemented. It will also provide a history of previous versions.\n\n\n## Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n||  | This is a collection as long as the different versions that have been deployed by the bank. |\n|Number| Number |``Required`` The ordinal of the code version |\nDeploy Date|Date |``Required`` The date this version was deployed in the form `YYYYDDMM`|\n|Code | string |``Required`` The version number of the API specification ``V1``|\n|Is Primary | Boolean |``Required`` Determines if this is the primary version ``true``|",
          "summary": "Version Information",
          "tags": [
            "Meta"
          ],
          "operationId": "V1MetaVersionGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/VersionInformation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "number": "1.0",
                      "deployDate": "yyyymmdd",
                      "code": "v1",
                      "isPrimary": true
                    },
                    {
                      "number": "2.0",
                      "deployDate": "yyyymmdd",
                      "code": "v2",
                      "isPrimary": false
                    },
                    {
                      "number": "3.0",
                      "deployDate": "yyyymmdd",
                      "code": "v3",
                      "isPrimary": false
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/meta/products": {
        "get": {
          "description": "This endpoint provides information about the products that a bank has that can be assessed from the Open Banking API gateway. Products categories include accounts, cards, channels, digital, etc. \r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|name| string |`Required` The name of the product such as `Super Savings Account`|\r\n|productId|string |`Required` A unique product identifier|\r\n|productCategory|string |`Required` A bank specified category of products such as `accounts`, `cards`, `channels`, `digital` |\r\n|description | string |`Required` Description of the product. |\r\n|currency | string |`Required` A 3-character code that represents the currency|\r\n",
          "summary": "Get Products",
          "tags": [
            "Meta"
          ],
          "operationId": "V1MetaProductsGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetProducts-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "name": "ABC Savings Account",
                      "productId": "ABCSBA001",
                      "productCategory": "Accounts",
                      "productType": "account",
                      "description": "The best savings account money can buy",
                      "currencies": "NGN"
                    },
                    {
                      "name": "ABC Domiciliary Account",
                      "productId": "ABCUSD001",
                      "productType": "account",
                      "productCategory": "Accounts",
                      "description": "The best domiciliary account in Nigeria",
                      "currencies": "USD"
                    },
                    {
                      "name": "ABC Naira Mastercard",
                      "productId": "ABCMC001",
                      "productType": "debitCard",
                      "productCategory": "Cards",
                      "description": "Spend anywhere your heart desires",
                      "currencies": "NGN"
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/meta/metrics": {
        "get": {
          "description": "This endpoint retrieves an FI performance metrics specified by a start and end date.\r\n\r\n`This endpoint supports paging`\r\n\r\n\r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|function|string|`Required` The name or ID of the API function that is implemented and callable on the FI's API gateway`|\r\n|metricStartTime|datetime|`Required` The earliest possible time for which the performance metrics data should be provided |\r\n|metricStartTime|datetime|`Required` The latest possible time for which the performance metrics data should be provided |\r\n|minimumResponseTime|number|`Required` The fastest response time in milliseconds that the FI responded within the specified time range  |\r\n|averageResponseTime|number|`Required` The average response time in milliseconds that the FI responded within the specified time range  |\r\n|maximumResponseTime|number|`Required` The slowest response time in milliseconds that the FI responded within the specified time range  |",
          "summary": "Get Performance",
          "tags": [
            "Meta"
          ],
          "operationId": "V1MetaMetricsGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "from",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "(optional) Datetime to filter performance metrics from in the format `DDMMYYYY`. Default is the earliest data available"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "(optional) Datetime to filter performance metrics from in the format `DDMMYYYY`. Default is the latest data available"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetPerformance-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "function": "getAccount",
                      "metricStartTime": "2019-05-31 08:55:23",
                      "metricEndTime": "2019-05-31 08:55:23",
                      "minimumResponseTime": 100,
                      "averageResponseTime": 500,
                      "maximumReponseTime": 1233,
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    },
                    {
                      "function": "getMeta",
                      "metricStartTime": "2019-05-31 08:55:23",
                      "metricEndTime": "2019-05-31 08:55:23",
                      "minimumResponseTime": 200,
                      "averageResponseTime": 300,
                      "maximumReponseTime": 599,
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/branch": {
        "get": {
          "description": "This endpoint retrieves a list of all the branches a Bank has.\n\n`This endpoint support paging`",
          "summary": "Get All Branches",
          "tags": [
            "Branch"
          ],
          "operationId": "V1BranchGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/AllBranches-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "branchs": [
                    {
                      "branchId": "0123",
                      "branchName": "Alaba Oriole Branch",
                      "branchType": "Full Branch",
                      "description": "A random fancy branch",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "contactInfo": [
                        {
                          "description": "Customer support email",
                          "type": "email",
                          "value": "support@abcbank.ng"
                        },
                        {
                          "description": "Customer support phone",
                          "type": "phone",
                          "value": "+234 2 345 6789"
                        }
                      ],
                      "numberOfATMs": 2,
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/branch/{branchId}": {
        "get": {
          "description": "Gets get a specific branch by specifying a specific branch ID. Branch IDs are defined for each branch. This would have been given by the bank or you can see them all when you call /branch/\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| branchID|string |`Required` This is a ID of the branch as defined by the bank|",
          "summary": "Get a Specific Branch",
          "tags": [
            "Branch"
          ],
          "operationId": "V1BranchByBranchIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "branchId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetaSpecificBranch-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "branch": [
                    {
                      "branchId": "0123",
                      "branchName": "Alaba Oriole Branch",
                      "branchType": "Full Branch",
                      "description": "A random fancy branch",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "contactInfo": [
                        {
                          "description": "Customer support email",
                          "type": "email",
                          "value": "support@abcbank.ng"
                        },
                        {
                          "description": "Customer support phone",
                          "type": "phone",
                          "value": "+234 2 345 6789"
                        }
                      ],
                      "numberOfATMs": 2,
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/branch/latitude/{latitude}/longitude/{longitude}/radius/{radius}": {
        "get": {
          "description": "This endpoint retrieves the location of a bank branch based on specified longitude and latitude.\n\n`This endpoint supports paging`\n\n#### URL Parameters\n| Parameter|Type |Description  |\n|--|--|--|\n| longitude |Decimal |`Required`  geographic coordinates|\n| latitude |Decimal |`Required`  geographic coordinates|\n| radius|integer |`Optional`   circular distance, in meters, around the co-ordinate|",
          "summary": "Get Branch by Location",
          "tags": [
            "Branch"
          ],
          "operationId": "V1BranchLatitudeLongitudeRadiusRadiusByLatitudeAndLongitudeGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "longitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "radius",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetBranchbyLocation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "branchId": "0123",
                      "branchName": "Alaba Oriole Branch",
                      "branchType": "Full Branch",
                      "description": "A random fancy branch",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888,
                          "radius": "600m"
                        }
                      },
                      "contactInfo": [
                        {
                          "description": "Customer support email",
                          "type": "email",
                          "value": "support@abcbank.ng"
                        },
                        {
                          "description": "Customer support phone",
                          "type": "phone",
                          "value": "+234 2 345 6789"
                        }
                      ],
                      "numberOfATMs": 2,
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/atms": {
        "get": {
          "description": "This endpoint retrieves a list of all ATMs in a bank. \n\n`This endpoint supports paging`",
          "summary": "Get All ATMs",
          "tags": [
            "ATM"
          ],
          "operationId": "V1AtmsGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetAllATMs-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "atmId": "0091234",
                      "terminalId": "10091234",
                      "branchID": "0234",
                      "description": "NCR ATM at Karaole Street Branch, Ibadan",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "baseCurrency": "NGN",
                      "minimumCashAmount": 5,
                      "ATMServices": [
                        "CashWithdrawal",
                        "PINChange",
                        "MobilePhoneTopUp",
                        "Balance",
                        "MiniStatement"
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    },
                    {
                      "atmId": "0091235",
                      "terminalId": "10091235",
                      "branchID": "0234",
                      "description": "Wincor ATM at Karaole Street Branch, Ibadan",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "baseCurrency": "NGN",
                      "minimumCashAmount": 5,
                      "ATMServices": [
                        "CashWithdrawal",
                        "PINChange",
                        "Balance",
                        "MiniStatement",
                        "Quickteller"
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/atms/{terminalId}": {
        "get": {
          "description": "This endpoints returns the data of a specific ATM by specifying the terminal id.\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| terminalID|string |`Required` This is a terminal ID of the ATM you want to get|",
          "summary": "Get a Specific ATM",
          "tags": [
            "ATM"
          ],
          "operationId": "V1AtmsByTerminalIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "terminalId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/FindATMbyTerminalId"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "atmId": "0091234",
                    "terminalId": "10091234",
                    "branchID": "0234",
                    "description": "NCR ATM at Karaole Street Branch, Ibadan",
                    "location": {
                      "street": "123 Karaole Street",
                      "city": "Ibadan",
                      "state": "Oyo",
                      "country": "NG",
                      "geoLocation": {
                        "latitude": 7.332014,
                        "longitude": 3.86888
                      }
                    },
                    "baseCurrency": "NGN",
                    "minimumCashAmount": 5,
                    "ATMServices": [
                      "CashWithdrawal",
                      "PINChange",
                      "MobilePhoneTopUp",
                      "Balance",
                      "MiniStatement"
                    ],
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/atms/branch/{branchId}": {
        "get": {
          "description": "This endpoints retrieves ATMs tied to specific branch identified by its branch ID. You can get branch IDs from `/v1/branch/`\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| branchID|string |`Required` This is a ID of the branch whose ATMs you want to get|",
          "summary": "Get ATM by Branch",
          "tags": [
            "ATM"
          ],
          "operationId": "V1AtmsBranchByBranchIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "branchId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetATMbyBranch-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "atmId": "0091234",
                      "terminalId": "10091234",
                      "branchID": "0234",
                      "description": "NCR ATM at Karaole Street Branch, Ibadan",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "baseCurrency": "NGN",
                      "minimumCashAmount": 5,
                      "ATMServices": [
                        "CashWithdrawal",
                        "PINChange",
                        "MobilePhoneTopUp",
                        "Balance",
                        "MiniStatement"
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    },
                    {
                      "atmId": "0091235",
                      "terminalId": "10091235",
                      "branchID": "0234",
                      "description": "Wincor ATM at Karaole Street Branch, Ibadan",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "baseCurrency": "NGN",
                      "minimumCashAmount": 5,
                      "ATMServices": [
                        "CashWithdrawal",
                        "PINChange",
                        "Balance",
                        "MiniStatement",
                        "Quickteller"
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/atms/latitude/{latitude}/longitude/{longitude}/radius/{radius}": {
        "get": {
          "description": "This endpoint gets ATMs within a geographic location specified by the longitude and latitude.\n\n`This endpoint supports paging`\n\n#### URL Parameters\n| Parameter|Type |Description  |\n|--|--|--|\n| longitude |Decimal |`Required`  geographic coordinates|\n| latitude |Decimal |`Required`  geographic coordinates|\n| radius|integer |`Optional`   circular distance, in meters, around the co-ordinate|",
          "summary": "Get ATM by Location",
          "tags": [
            "ATM"
          ],
          "operationId": "V1AtmsLatitudeLongitudeRadiusRadiusByLatitudeAndLongitudeGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "longitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "radius",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetATMByLocation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "atmId": "0091234",
                      "terminalId": "10091234",
                      "branchID": "0234",
                      "description": "NCR ATM at Karaole Street Branch, Ibadan",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "baseCurrency": "NGN",
                      "minimumCashAmount": 5,
                      "ATMServices": [
                        "CashWithdrawal",
                        "PINChange",
                        "MobilePhoneTopUp",
                        "Balance",
                        "MiniStatement"
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    },
                    {
                      "atmId": "0091235",
                      "terminalId": "10091235",
                      "branchID": "0234",
                      "description": "Wincor ATM at Karaole Street Branch, Ibadan",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "baseCurrency": "NGN",
                      "minimumCashAmount": 5,
                      "ATMServices": [
                        "CashWithdrawal",
                        "PINChange",
                        "Balance",
                        "MiniStatement",
                        "Quickteller"
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/agent": {
        "get": {
          "description": "This endpoint retrieves a list of all agents that belongs to the bank.\n\n`This endpoint support paging`",
          "summary": "Get All Agents",
          "tags": [
            "Agency"
          ],
          "operationId": "V1AgentGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/AllAllAgents-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "agentId": "0123",
                      "agentName": "Alaba Oriole agent",
                      "agentType": "Full Service Agent",
                      "description": "Alagbole Supermarket",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "contactInfo": [
                        {
                          "description": "Agent email",
                          "type": "email",
                          "value": "alagbolesupermarket@example.com"
                        },
                        {
                          "description": "Agent phone",
                          "type": "phone",
                          "value": "08012345678"
                        }
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/agent/{agentId}": {
        "get": {
          "description": "This endpoint gets a specific agent by specifying an agent ID. Agent IDs are defined for each agent location. This would have been given by the bank or you can see them all when you call /agent/\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| agentID|string |`Required` This is a ID of the agent as defined by the bank or super agent|",
          "summary": "Get a Specific Agent",
          "tags": [
            "Agency"
          ],
          "operationId": "V1AgentByAgentIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "agentId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetaSpecificAgent-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "agentId": "0123",
                      "agentName": "Alaba Oriole agent",
                      "agentType": "Full Service Agent",
                      "description": "Alagbole Supermarket",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "contactInfo": [
                        {
                          "description": "Agent email",
                          "type": "email",
                          "value": "alagbolesupermarket@example.com"
                        },
                        {
                          "description": "Agent phone",
                          "type": "phone",
                          "value": "08012345678"
                        }
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/agent/latitude/{latitude}/longitude/{longitude}/radius/{radius}": {
        "get": {
          "description": "This endpoint retrieves the location of an agent based on specified longitude and latitude.\n\n`This endpoint support paging`\n\n\n#### URL Parameters\n| Parameter|Type |Description  |\n|--|--|--|\n| longitude |Decimal |`Required`  geographic coordinates|\n| latitude |Decimal |`Required`  geographic coordinates|\n| radius|integer |`Optional`   circular distance, in meters, around the co-ordinate|",
          "summary": "Get Agents by Location",
          "tags": [
            "Agency"
          ],
          "operationId": "V1AgentLatitudeLongitudeRadiusRadiusByLatitudeAndLongitudeGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "longitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "radius",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetAgentsbyLocation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "agentId": "0123",
                      "agentName": "Alaba Oriole agent",
                      "agentType": "Full Service Agent",
                      "description": "Alagbole Supermarket",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      },
                      "contactInfo": [
                        {
                          "description": "Agent email",
                          "type": "email",
                          "value": "alagbolesupermarket@example.com"
                        },
                        {
                          "description": "Agent phone",
                          "type": "phone",
                          "value": "08012345678"
                        }
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/pos/{terminalId}": {
        "get": {
          "description": "This endpoint retrieves POS terminal data by its terminal ID.\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| bterminalID|string |`Required` The terminal ID of the POS device|",
          "summary": "Get POS by Terminal Id",
          "tags": [
            "POS"
          ],
          "operationId": "V1PosByTerminalIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "terminalId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetPOSbyTerminalId"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "terminalId": "AB123456",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/pos/merchant/{merchantId}": {
        "get": {
          "description": "This endpoint retrieves data of POS terminals beloging to a specific merchant identified by the merchant ID.\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| merchantID|string |`Required` The unique identifier for the merchant who owns the POS device|",
          "summary": "Get POS by Merchant Id",
          "tags": [
            "POS"
          ],
          "operationId": "V1PosMerchantByMerchantIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "merchantId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetPOSByMerchantId-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "terminalId": "AB123456",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    },
                    {
                      "terminalId": "AB654321",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/pos/branch/{branchId}": {
        "get": {
          "description": "This endpoint retrieves data of POS terminals tied to a specific branch identified by its branch ID.\n\n`This endpoint supports paging`\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| branchID|string |`Required` This is a ID of the branch whose POS terminals you want to get|",
          "summary": "Get POS by Branch",
          "tags": [
            "POS"
          ],
          "operationId": "V1PosBranchByBranchIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "branchId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetPOSByBranchId-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "terminalId": "AB123456",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    },
                    {
                      "terminalId": "AB654321",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/pos/latitude/{latitude}/longitude/{longitude}/radius/{radius}": {
        "get": {
          "description": "This endpoint retrieves data of POS terminals within a specific location identied by its longtitude and lattitude.\n\n`This endpoint supports paging`\n\n\n#### URL Parameters\n| Parameter|Type |Description  |\n|--|--|--|\n| longitude |Decimal |`Optional`  geographic coordinates|\n| latitude |Decimal |`Optional`  geographic coordinates|\n| radius|integer |`Optional`   circular distance, in meters, around the co-ordinate|",
          "summary": "Get POS by Location",
          "tags": [
            "POS"
          ],
          "operationId": "V1PosLatitudeLongitudeRadiusRadiusByLatitudeAndLongitudeGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "latitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "longitude",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "radius",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetPOSbyLocation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "terminalId": "AB123456",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    },
                    {
                      "terminalId": "AB654321",
                      "merchantId": "20123456",
                      "merchantName": "Karaole Supermarket",
                      "email": "merchant@example.com",
                      "phone": "09091234567",
                      "dateDeployed": "2017-12-23",
                      "currency": "NGN",
                      "terminalType": "Pax 90",
                      "ptsa": "Datalex Datapro",
                      "ptsp": "Super PTSP",
                      "status": "Active",
                      "location": {
                        "street": "123 Karaole Street",
                        "city": "Ibadan",
                        "state": "Oyo",
                        "country": "NG",
                        "geoLocation": {
                          "latitude": 7.332014,
                          "longitude": 3.86888
                        }
                      }
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/customers/{customerId}": {
        "get": {
          "description": "This endpoints retrieves a customer by customer ID\n\n#### URL Parameters \n\n| Parameter|Type |Description  |\n|--|--|--|\n|customerID |string |`Optional` The unique identifier for a customer as defined by a Bank|\n",
          "summary": "Get Customer by Customer Id",
          "tags": [
            "Customer"
          ],
          "operationId": "V1CustomersByCustomerIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetCustomerbyCustomerID-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "customerID": "1234567890",
                    "customerName": {
                      "firstName": "Ado",
                      "lastName": "John",
                      "otherNames": "Sule"
                    },
                    "bvn": "22112345678",
                    "dateOfBirth": "01/12/1990",
                    "email": "ado.john@example.com",
                    "phone": "09034567890",
                    "numberOfAccounts": 1,
                    "type": "Individual",
                    "startDateOfRelationship": "02/03/2011",
                    "status": "Active",
                    "customerAddress": {
                      "street": "21, Orimolade Crescent, Adeniyi Jones",
                      "city": "Ikeja",
                      "state": "Lagos",
                      "country": "NG",
                      "postalCode": "101234"
                    },
                    "identity": {
                      "idNumber": "A123456789",
                      "idType": "Passport",
                      "countryOfIssue": "Nigeria",
                      "expiryDate": "23/12/2025"
                    },
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/customer/bvn/{bvn}": {
        "get": {
          "description": "This endpoint retrieves a customer using the `Bank Verification Number`. It is possible that this could return more than a single record.\r\n\r\n`This endpoint supports paging`\r\n\r\n#### URL Parameters \r\n\r\n| Parameter|Type |Description |\r\n|--|--|--|\r\n|bvn |string |`Required` customer `Bank Verification Number` |",
          "summary": "Get Customer by BVN",
          "tags": [
            "Customer"
          ],
          "operationId": "V1CustomerBvnByBvnGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "bvn",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetCustomerbyBVN-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "customerID": "1234567890",
                    "customerName": {
                      "firstName": "Ado",
                      "lastName": "John",
                      "otherNames": "Sule"
                    },
                    "bvn": "22112345678",
                    "dateOfBirth": "01/12/1990",
                    "email": "ado.john@example.com",
                    "phone": "09034567890",
                    "numberOfAccounts": 1,
                    "type": "Individual",
                    "startDateOfRelationship": "02/03/2011",
                    "status": "Active",
                    "customerAddress": {
                      "street": "21, Orimolade Crescent, Adeniyi Jones",
                      "city": "Ikeja",
                      "state": "Lagos",
                      "country": "NG",
                      "postalCode": "101234"
                    },
                    "identity": {
                      "idNumber": "A123456789",
                      "idType": "Passport",
                      "countryOfIssue": "Nigeria",
                      "expiryDate": "23/12/2025"
                    },
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/customer/feedback": {
        "post": {
          "description": "This endpoint allows the customer to directly give feedback to the bank or financial institution.\n\n#### Request Parameter\n\n| Parameter|Type |Description |\n|--|--|--|\n|feedbackReference|string |`Required` The unique identifier for the feedback report generated by the service provider |\n|customerID |string |` Optional ` A unique identifier for a customer as defined by a Bank |\n|accountNumber|string |` Optional ` The account number of the customer in `NUBAN` format|\n|bvn |string |`Optional` The `Bank Verification Number` of the customer |\n|phoneNumber |String |`Optional` customer phone number \n|email |String |`Optional` customer email address |\n|feedbackCategory|String |`Required` The category of the fraud, as defined by the bank such as `Bill Payment`, `General` `ReportATM`|\n|feedbackDescription|String |` Required ` A description of the fraud |\n\n#### Response Parameters\n\n| Parameter|Type |Description |\n|--|--|--|\n| feedbackReference |string |`Required` Echo of the feedback reference of the service provider`|",
          "summary": "Customer Feedback",
          "tags": [
            "Customer"
          ],
          "operationId": "V1CustomerFeedbackPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/CustomerFeedbackRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ReportaFraud-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "reportingReference": "0091234",
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/account/customer/{customerId}": {
        "get": {
          "description": "This endpoint retrieves all accounts belonging to a customer.\r\n\r\n`This endpoint supports paging`\r\n\r\n#### URL Parameters\r\n| Parameter |Type |Description |\r\n|--|--|--|\r\n| customerId|string |`Required` A unique identifier for the customer as defined by the bank|\r\n",
          "summary": "Get All Accounts",
          "tags": [
            "Accounts"
          ],
          "operationId": "V1AccountCustomerByCustomerIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetAllAccounts%28SingleAccount%29"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "accountNumber": "1010119934",
                      "customerId": "1234567890",
                      "accountName": "Ado John Sule",
                      "currency": "NGN",
                      "accountOpeningDate": "2017-01-13",
                      "lastTransactionDate": "2019-03-15T07:05:59.524Z",
                      "accountType": "Wonderful Savings Account",
                      "bvn": "221422456789",
                      "fullName": "Ado John Sule",
                      "phoneNumber": "09091234567",
                      "email": "ado.john@example.com",
                      "status": "Active",
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/account/{accountNumber}": {
        "get": {
          "description": "This endpoint retrieves a specific account.\n\n#### URL Parameters\n\n| Parameter |Type |Description |\n|--|--|--|\n| accountNumber|string |`Required` Customer's account number in `NUBAN` format|\n|\n\n",
          "summary": "Get Specific Account",
          "tags": [
            "Accounts"
          ],
          "operationId": "V1AccountByAccountNumberGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accountNumber",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetSpecificAccount-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "accountNumber": "1010119934",
                      "customerId": "1234567890",
                      "accountName": "Ado John Sule",
                      "currency": "NGN",
                      "accountOpeningDate": "2017-01-13",
                      "lastTransactionDate": "2019-03-15T07:05:59.524Z",
                      "accountType": "Wonderful Savings Account",
                      "bvn": "221422456789",
                      "fullName": "Ado John Sule",
                      "phoneNumber": "09091234567",
                      "email": "ado.john@example.com",
                      "status": "Active",
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/account/balance/{accountNumber}": {
        "get": {
          "description": "This endpoint gets the balance of a specified account.\r\n\r\n#### URL Parameters\r\n\r\n| Parameter |Type |Description |\r\n|--|--|--|\r\n| accountNumber|string |`Required` Customer's account number in `NUBAN` format|\r\n\r\n## Response Body Fields\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|accountNumber| string |`Required` NUBAN account number of the customer |\r\n|currency| string |`Required` 3 character code representing the currency of the account|\r\n|availableBalance| number |`Required` The amount that a customer can spend|\r\n|clearedBalance| number |`Optional` The amount that has been cleared into the account|\r\n|unclearBalance| number |` Optional ` The amount that is yet to be cleared into the account|\r\n|holdBalance| number |` Optional ` The amount that has been held in the account. For example, for a POS or web transaction that is yet to be debited|\r\n|minimumBalance| number |` Optional ` The minimum balance that the account must hold|\r\n\r\n",
          "summary": "Get Account Balance",
          "tags": [
            "Accounts"
          ],
          "operationId": "V1AccountBalanceByAccountNumberGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accountNumber",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetAccountBalance"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "accountNumber": "0123456789",
                    "currency": "NGN",
                    "decimal": 0,
                    "availableBalance": 800000,
                    "clearedBalance": 1000000,
                    "unclearedBalance": 0,
                    "holdBalance": 100000,
                    "minimumBalance": 100000,
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/account/types": {
        "get": {
          "description": "This endpoint retrieves all the account types and products as defined by the bank. May be restricted to certain accounts. Internal accounts may not be returned.\r\n\r\n`This endpoint supports paging`\r\n\r\n## Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|accountTypeId| string | `Required` The type of the account|\r\n|accountTypeName|string | `Required` The name of the account type|\r\n|minimumBalance| number| `Required` The minimum balance the account can hold\r\n|maximumBalance| number| `Required` The maximum balance the account can hold |\r\n|maximumOutflowLimit| number|`Required` The maximum amount that can be debited |\r\n|maximumInflowLimit| number| `Required` The maximum amount that can be credited |\r\n|currency| string| `Required` A 3 character code that represents the currency |\r\n|documentationRequired| |`Required` A collection of documents required for this operation |\r\n|type|string |`Required` The type of identity |\r\n|description|string|`Required` The description given to the type of identification. |\r\n|value|string|`Required` The value of the document|\r\n|digitalService|||\r\n|service|string|`Required` The type of service `USSD`, `Mobile`|\r\n|description|string|`Required` Description of the digital product or service|\r\n|available|boolean|`Required` Whether the service is available or not|\r\n|cardProducts|||\r\n|id|string|`Required` A unique identification for the card product `MC`, `VS`, `VR`|\r\n|description|string|`Required` Description of the product card product id `Mastercard`, `Visa`, `Verve`|\r\n|available|boolean|`Required` Whether the service is available or not|",
          "summary": "All Accounts or Product Types",
          "tags": [
            "Accounts"
          ],
          "operationId": "V1AccountTypesGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/AllAccountsandProductType-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "accountTypeId": "SBA123",
                      "accountTypeName": "SANEF Savings Accounts",
                      "minimumBalance": 100000,
                      "maximumBalance": 100000000,
                      "maximumOutflowLimit": 10000000,
                      "maximumInFlowLimit": 25000000,
                      "currency": "NGN",
                      "decimal": 0,
                      "kycLevel": 2,
                      "documentationRequired": [
                        {
                          "type": "id",
                          "description": "Proof of identity",
                          "value": "Passport photograph"
                        }
                      ],
                      "digitalServices": [
                        {
                          "service": "USSD",
                          "description": "ABC Super Banking",
                          "available": true
                        },
                        {
                          "service": "mobile",
                          "description": "ABC Mobile Banking",
                          "available": false
                        }
                      ],
                      "cardProducts": [
                        {
                          "id": "MC",
                          "description": "Mastercard",
                          "available": true
                        },
                        {
                          "id": "VS",
                          "description": "Visa",
                          "available": false
                        },
                        {
                          "id": "VR",
                          "description": "Verve",
                          "available": true
                        }
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    },
                    {
                      "accountTypeId": "ODA456",
                      "accountTypeName": "Excellent Current Account",
                      "minimumBalance": 0,
                      "maximumBalance": 999999999999999,
                      "maximumOutflowLimit": 9999999999,
                      "maximumInFlowLimit": 9999999999,
                      "currency": "NGN",
                      "decimal": 0,
                      "kycLevel": 2,
                      "documentationRequired": [
                        {
                          "type": "id",
                          "description": "Proof of identity",
                          "value": "Passport photograph"
                        },
                        {
                          "type": "ref",
                          "description": "Reference",
                          "value": "Reference Letter"
                        }
                      ],
                      "digitalServices": [
                        {
                          "service": "USSD",
                          "description": "ABC Super Banking",
                          "available": true
                        },
                        {
                          "service": "mobile",
                          "description": "ABC Mobile Banking",
                          "available": false
                        }
                      ],
                      "cardProducts": [
                        {
                          "id": "MC",
                          "description": "Mastercard",
                          "available": true
                        },
                        {
                          "id": "VS",
                          "description": "Visa",
                          "available": false
                        },
                        {
                          "id": "VR",
                          "description": "Verve",
                          "available": true
                        }
                      ],
                      "expansionFields": [
                        {
                          "id": "Some random ID",
                          "description": "Some random text",
                          "type": "Some random type",
                          "value": "Some value"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/account/types/{accountTypeId}": {
        "get": {
          "description": "This endpoint retrieves a specific account or product type.\r\n\r\n#### URL Parameters\r\n| Parameter |Type |Description  |\r\n|--|--|--|\r\n| accountTypeId|string |`Required`Unique identifier of the account or product type to be retrieved `current`|\r\n",
          "summary": "Get a Specific Accounts or Product Types",
          "tags": [
            "Accounts"
          ],
          "operationId": "V1AccountTypesByAccountTypeIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accountTypeId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetAccountsandProductTypes"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "accountTypeId": "SBA123",
                    "accountTypeName": "SANEF Savings Accounts",
                    "minimumBalance": 100000,
                    "maximumBalance": 100000000,
                    "maximumOutFlowLimit": 10000000,
                    "maximumInFlowLimit": 25000000,
                    "currency": "NGN",
                    "decimal": 0,
                    "kycLevel": 2,
                    "documentationRequired": [
                      {
                        "type": "id",
                        "description": "Proof of identity",
                        "value": "Passport photograph"
                      }
                    ],
                    "digitalServices": [
                      {
                        "service": "USSD",
                        "description": "ABC Super Banking",
                        "available": true
                      },
                      {
                        "service": "mobile",
                        "description": "ABC Mobile Banking",
                        "available": false
                      }
                    ],
                    "cardProducts": [
                      {
                        "id": "MC",
                        "description": "Mastercard",
                        "available": true
                      },
                      {
                        "id": "VS",
                        "description": "Visa",
                        "available": false
                      },
                      {
                        "id": "VR",
                        "description": "Verve",
                        "available": true
                      }
                    ],
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/account/open": {
        "post": {
          "description": "This endpoint is used to open an account with the bank. \n\n#### Request Parameter\n\n| Parameter|Type |Description  |\n|--|--|--|\n|requestId|string |`Required` The unique identifier for the request |\n|accountTypeId |string |`Required` A unique identifier for the account |\n|firstName |String |`Required` First name |   |\n|otherName |String |`Required` Other names |\n|surname |String |`Required` Surname |\n|email |String |`Required` Email address |\n|salutation |String |`Required` Formal title |\n|gender |String |`Required` Gender |\n|dateOfBirth |String |`Required` Date of birth |\n|bvn |String |`Required` Bank verification number\n|street |String |`Required` Street|\n|localGovernment |String |`Optional` local government |\n|country |String |`Required` Country|\n|nationality |String |`Required` Nationality code|\n|customerId |String |`Required` A unique costumer id|\n|phone |String |`Required` Phone number|\n\n\n#### Response Body Fields\n\n| Parameter|Type |Description  |\n|--|--|--|\n|requestId|string |`Required` The unique identifier for the request |\n|accountNumber |String |`Required` customer account number|\n|customerId |String |`Required` A unique costumer id |\n|accountOpeningDate |String |`Required` A unique costumer id |\n|Process |String |`Required` A process type `Batch`|\n|ProcessCode |String |`Required` A processing code `00`|\n|processMessage |String |`Required` Response message from the server|\n|linkedCard||`Optional` card linked to the account|\n|agency||`Optional` agency linked to the account|",
          "summary": "Open Account",
          "tags": [
            "Accounts"
          ],
          "operationId": "V1AccountOpenPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/OpenAccountRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/AccountOpening"
              },
              "examples": {
                "application/json": {
                  "status": "successful",
                  "message": "Request process successfully",
                  "data": {
                    "requestId": "SUPERAGENT0013456",
                    "accountNumber": "0123456784",
                    "customerId": "CI12345678",
                    "accountOpeningDate": "2018-09-04 17:45:55",
                    "Process": "Batch",
                    "processCode": "00",
                    "processMessage": "Account opened successfully"
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/{accountId}/statement": {
        "get": {
          "description": "This endpoint retrieves customer transactions specified by a start and end date.\r\n\r\n`This endpoint supports paging`\r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|accountNumber|string|`Required` The customer’s bank account number `|\r\n|amount|number|`Required` Transaction amount |\r\n|currency|string|`Required` A 3 character code that represents the currency|\r\n|channel|string|`Optional` Channel from which the transaction was done such as `ATM`, `POS`, `Mobile`, `USSD`|\r\n|debitOrCredit|string|`Required` Debit or Credit `Dr or Cr`|\r\n|narration|string|`Required` A description of the transaction |\r\n|referenceId|string|`Required` A unique internal reference to the specific transaction|\r\n|transactionTime|datetime|`Required` The time on which the transaction was done on the system in the format `DDMMYYYY hh:mm:ss`|\r\n|transactionType|string|`Required` The type of transaction|\r\n|valueDate|datetime|`Required`  The value date for transaction on the system in the format `DDMMYYYY`|\r\n|balanceAfter|number|`Optional` The balance of the account after the transaction was approved or authorized|\r\n",
          "summary": "Get Statement",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionStatementByAccountIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "from",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "(optional) Datetime to filter transactions from in the format `DDMMYYYY`. Default is the earliest transaction available"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "type": "string",
              "description": "(optional) Datetime to filter transactions from in the format `DDMMYYYY`. Default is the date of the request"
            },
            {
              "name": "accountId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetStatementSuccess"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "transactions": [
                      {
                        "accountNumber": "1234567890",
                        "amount": 1000,
                        "currency": "NGN",
                        "channel": "ATM",
                        "debitOrCredit": "DR",
                        "narration": "ATM Withdrawal/Karaole LANG",
                        "referenceId": "WDS12345678909987",
                        "transactionTime": "2019-01-02T19:58:47.1234567",
                        "transactionType": "ATM Withdrawal",
                        "valueDate": "2019-01-02",
                        "balanceAfter": 1200,
                        "expansionFields": [
                          {
                            "id": "Some random ID",
                            "description": "Some random text",
                            "type": "Some random type",
                            "value": "Some value"
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/singletransferwithbank": {
        "post": {
          "description": "This endpoint processes a single transfer to an account within the bank.\n\n#### Request Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|amount|number|`Required` Transaction amount|\n|statusWebHook|number|`Optional` WebHook that can be called back to check the transaction status|\n|channel|string|`Required` Transaction channel|\n|currency|string|`Required` A 3-character code that represents the currency|\n|destinationAccount|string|`Required` Recipient’s account number in NUBAN format|\n|destinationAccountName|string|`Required` Recipient name |\n|destinationNarration|string|`Required` Transaction description|\n|referenceId|string|`Required` A unique internal reference to the specific transaction|\n|sourceAccount|string|`Required` Sender’s account number in NUBAN format|\n|sourceAccountName|string|`Required` Sender account name |\n|sourceAmount|number|`Required` Transaction amount|\n|sourceCurrency|string|`Required` A 3-character code that represents the currency |\n|sourceNarration|string|`Required` Sender transaction description|\n\n-----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|errorMessage|string|`Optional` The message if the transaction was not successful | \n|errorCode|string|`Optional` The code if the transaction was not successful | \n| transactionRef |string|`Required` A unique reference provided by the system for the specific transaction | \n| validTill|string|`Required` The time in which the authorization token is valid before it is expired| \n| expiryMinutes|number|`Required` The number of minutes by which the authorization would expire | \n| authDetails| |`Required` Collection of authorization payload| \n| type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \n| label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \n| Message|string|`Required` The message that Service Provider should display when rendering input to the customer| \n",
          "summary": "Single Transfer within Bank",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionSingletransferwithbankPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/SingleTransferwithinBankRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Single-TransferwithinBank-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "errors": null,
                    "error": null,
                    "transactionRef": "0000000000",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "statusWebHook": 0,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/nameenquiry": {
        "post": {
          "description": "This endpoint return the name of attached to an account number. it is  useful to detect situations where the originating customer specifies a wrong beneficiary account.\n\n#### Request Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|accountNumber|number|`Required` The account number to enquire|\n\n-----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n| Message|string|`Optional` The message that Service Provider should display when rendering input to the customer| \n| responseCode|string|`Required` Response code as defined by as defined by 8583 standards| \n|accountNumber|string|`Required` The account number passed in for enquiry `20225552255`| \n|accountName|string|`Required` The name attached to the account number `John Doe`| \n|bvn|string|`Required` Bank verification number of the account `2014554547` | \n\n",
          "summary": "Name Enquiry",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionNameenquiryPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/NameEnquiryRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/NameEnquiry-Success"
              },
              "examples": {
                "application/json": {
                  "responsecode": "00",
                  "status": "Successful",
                  "message": "",
                  "data": {
                    "accountNumber": 2222000000012345,
                    "accountName": "John Doe",
                    "bvn": 25658545854
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/singleInterbankTransfer": {
        "post": {
          "description": "This endpoint processes a single interbank to an account in another bank or financial institution.\r\n\r\n#### Request Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|amount|number|`Required` Transaction amount|\r\n|statusWebHook|number|`Optional` WebHook that can be called back to check the transaction status|\r\n|channel|string|`Required` Transaction channel|\r\n|currency|string|`Required` A 3-character code that represents the currency |\r\n|destinationBankCode|string|`Required` Code of the recipient bank|\r\n|destinationBankName|string|`Required` Name of the recipient bank |\r\n|destinationAccount|string|`Required` Recipient’s account number in NUBAN format|\r\n|destinationAccountName `Mike Dudu`|string|`Required` Recipient name|\r\n|destinationNarration|string|`Required` Transaction description|\r\n|referenceId|string|`Required` A unique internal reference to the specific transaction|\r\n|sourceAccount|string|`Required` Sender’s account number in NUBAN format|\r\n|sourceAccountName|string|`Required` Sender account name |\r\n|sourceAmount|number|`Required` Transaction amount |\r\n|sourceCurrency|string|`Required` A 3-character code that represents the currency|\r\n|sourceNarration|string|`Required` Sender transaction description |\r\n\r\n-----------\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|errorMessage|string|`Optional` The message if the transaction was not successful| \r\n|errorCode|string|`Optional` The code if the transaction was not successful| \r\n| transactionRef |string|`Required` A unique reference provided by the system for the specific transaction| \r\n| validTill|string|`Required` The time in which the authorization token is valid before it is expired| \r\n| expiryMinutes|number|`Required` The number of minutes by which the authorization would expire| \r\n| authDetails| |`Required` Collection of authorization payload| \r\n| type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \r\n| label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \r\n| Message|string|`Required` The message that Service Provider should display when rendering input to the customer|\r\n",
          "summary": "Single Transfer to Another Bank",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionSingleInterbankTransferPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/SingleTransfertoAnotherBankRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/SIngleTransfertoAnotherBank-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "errors": null,
                    "error": null,
                    "transactionRef": "0000000000",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "statusWebHook": 0,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/confirmation/{transactionReference}": {
        "get": {
          "description": "This endpoints returns the status of a transaction through the reference. This endpoint is able to confirm any type of transaction. \n\n-----------\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| transactionReference|string |`Required` Transaction reference of a previously posted transaction which has been done by the Servive Provider. You cannot check status of transactions done by another Service Provider|\n\n-----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|status|string|`Required` A description of the state of the transaction| \n|statusCode|string|` Required ` A code describing the state of the transaction\t| \n",
          "summary": "Transaction confirmation",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionConfirmationByTransactionReferenceGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "transactionReference",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/Transactionconfirmation-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "status": "A random status message ",
                    "statusCode": "01234"
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/complete": {
        "post": {
          "description": "This endpoint is called to complete any transaction that requires extra authoriztion such as `OTP` authorization.\r\n\r\n#### Request Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|requestRef|number|``Required`` A unique request reference|\r\n|transactionRef|number|``Required`` A unique transaction reference|\r\n|authDetails|||\r\n|type|string|``Required`` The type of authorization method e.g `OTP` `password`|\r\n|value|string|``Required`` The authorization value|\r\n\r\n\r\n#### Response Body Fields\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|status|string|``Required`` Status of the transaction  |\r\n|statusCode|string|``Required`` Status code transaction ``01234``|",
          "summary": "Transaction completion",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionCompletePost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/TransactioncompletionRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/TransactionCompletion-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "procesed successfully",
                  "data": {
                    "error": null,
                    "reuseToken": {
                      "token": "iuiu886ii",
                      "validTill": "yyyyMMddhhttss"
                    }
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/holdfund": {
        "post": {
          "description": "This endpoint holds a specified amount in a customer's account.\r\n\r\n#### Request Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|referenceId|string|`Required` A unique internal reference to the specific transaction|\r\n|account|string|`Required` Customer's account number in NUBAN format|\r\n|amount|number|`Required` Transaction amount to be held|\r\n|currency|string|`Required` A 3-character code that represents the currency|\r\n|startHoldDate|datetime|`Required` The time when the FI should commence holding the funds|\r\n|endHoldDate|datetime|`Required` The time when the FI should release the funds from customer account if no payment is made against the held funds|\r\n|transactionDate|datetime|`Required` Transaction time|\r\n\r\n-----------\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|errorMessage|string|`Optional` The message if the transaction was not successful| \r\n|errorCode|string|`Optional` The code if the transaction was not successful| \r\n|transactionRef |string|`Required` A unique reference provided by the system for the specific transaction| \r\n|validTill|string|`Required` The time in which the authorization token is valid before it is expired| \r\n|expiryMinutes|number|`Required` The number of minutes by which the authorization would expire| \r\n|authDetails| |`Required` Collection of authorization payload| \r\n|type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \r\n|label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \r\n|Message|string|`Required` The message that Service Provider should display when rendering input to the customer| ",
          "summary": "Hold Fund",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionHoldfundPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/HoldFundRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/HoldFund-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "errors": null,
                    "error": null,
                    "transactionRef": "XYZ12345678901234567890",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/releasefund": {
        "post": {
          "description": "This endpoint releases a specified amount in a customer's account that have been previously held by the SP.\r\n\r\n#### Request Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|referenceId|string|`Required` The unique reference to a previously held amount on the customer's account|\r\n|accountNumber|string|`Required` Customer account number in NUBAN format|\r\n|amount|number|`Required` The amount that should be released. If more than the amount held, the whole amount held would be released|\r\n|currency|string|`Required` A 3-character code that represents the currency|\r\n|releaseHoldDate|datetime|`Required` The time when the FI should release the held funds|\r\n|transactionDate|datetime|`Required` Transaction time|\r\n\r\n-----------\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|errorMessage|string|`Optional` The message if the transaction was not successful| \r\n|errorCode|string|`Optional` The code if the transaction was not successful| \r\n|transactionRef |string|`Required` A unique reference provided by the system for the specific transaction| ",
          "summary": "Release Fund",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionReleasefundPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/ReleaseFundRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ReleaseFund-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "data": {
                    "errors": null,
                    "error": null,
                    "transactionRef": "XYZ12345678901234567890"
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/heldfund/{accountNumber}/{referenceId}": {
        "get": {
          "description": "This endpoints returns the status of a fund held on an account through the reference.\r\n\r\n-----------\r\n#### URL Parameters\r\n\r\n| Parameter |Type |Description  |\r\n|--|--|--|\r\n|accountNumber|string|`Required` Customer account number in NUBAN format|\r\n| referenceId|string |`Required` Fund hold reference of a previously held fund which has been done by the Servive Provider. You cannot check status of funds held by another Service Provider|\r\n\r\n-----------\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|referenceId|string|`Required` The unique reference to the held amount on the customer's account|\r\n|accountNumber|string|`Required` Customer account number in NUBAN format|\r\n|amount|number|`Required` The amount that is held|\r\n|currency|string|`Required` A 3-character code that represents the currency|\r\n|startHoldDate|datetime|`Required` The time when the FI should commenced holding the funds|\r\n|endHoldDate|datetime|`Required` The time when the FI would release the funds from customer account if no payment is made against the held funds|\r\n|transactionDate|datetime|`Required` Transaction time|",
          "summary": "Get Held Fund",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionHeldfundByAccountNumberAndReferenceIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "accountNumber",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "referenceId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetHeldFund-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "referenceId": "ABCD12345678901234567890",
                    "accountNumber": "9876543210",
                    "amount": "10000",
                    "currency": "NGN",
                    "narration": "Hold fund narration",
                    "startHoldDate": "2018-12-01T15:59:33.516Z",
                    "endHoldDate": "2018-12-31T15:59:33.516Z",
                    "transactionDate": "2018-12-13T15:59:33.516Z"
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/multiIntrabankTransfer": {
        "post": {
          "description": "This endpoint processes multiple transfer to an account within the bank.\n\n#### Request Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|statusWebHook|number|`Optional` WebHook that can be called back to check the transaction status|\n|channel|string|`Required` Transaction channel|\n|currency|string|`Required` A 3-character code that represents the currency|\n|destinationAccount|string|`Required` Recipient’s account number in NUBAN format|\n|destinationAccountName|string|`Required` Recipient name |\n|destinationNarration|string|`Required` Transaction description|\n|referenceId|string|`Required` A unique internal reference to the specific transaction|\n|sourceAccount|string|`Required` Sender’s account number in NUBAN format|\n|sourceAccountName|string|`Required` Sender account name |\n|sourceAmount|number|`Required` Transaction amount|\n|sourceCurrency|string|`Required` A 3-character code that represents the currency |\n|sourceNarration|string|`Required` Sender transaction description|\n\n-----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|errorMessage|string|`Optional` The message if the transaction was not successful | \n|errorCode|string|`Optional` The code if the transaction was not successful | \n| transactionRef |string|`Required` A unique reference provided by the system for the specific transaction | \n| validTill|string|`Required` The time in which the authorization token is valid before it is expired| \n| expiryMinutes|number|`Required` The number of minutes by which the authorization would expire | \n| authDetails| |`Required` Collection of authorization payload| \n| type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \n| label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \n| Message|string|`Required` The message that Service Provider should display when rendering input to the customer| \n",
          "summary": "Multiple Transer Within Bank",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionMultiIntrabankTransferPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/MultipleTranserWithinBankRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/MultipleTranserWithinBank-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "errors": null,
                    "error": null,
                    "transactionRef": "0000000000",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "statusWebHook": 0,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/transaction/multipleinterbankTransfer": {
        "post": {
          "description": "This endpoint processes multiple transfer to an account within the bank.\n\n#### Request Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|amount|number|`Required` Transaction amount|\n|statusWebHook|number|`Optional` WebHook that can be called back to check the transaction status|\n|channel|string|`Required` Transaction channel|\n|currency|string|`Required` A 3-character code that represents the currency|\n|destinationAccount|string|`Required` Recipient’s account number in NUBAN format|\n|destinationAccountName|string|`Required` Recipient name |\n|destinationNarration|string|`Required` Transaction description|\n|referenceId|string|`Required` A unique internal reference to the specific transaction|\n|sourceAccount|string|`Required` Sender’s account number in NUBAN format|\n|sourceAccountName|string|`Required` Sender account name |\n|sourceAmount|number|`Required` Transaction amount|\n|sourceCurrency|string|`Required` A 3-character code that represents the currency |\n|sourceNarration|string|`Required` Sender transaction description|\n\n-----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|errorMessage|string|`Optional` The message if the transaction was not successful | \n|errorCode|string|`Optional` The code if the transaction was not successful | \n| transactionRef |string|`Required` A unique reference provided by the system for the specific transaction | \n| validTill|string|`Required` The time in which the authorization token is valid before it is expired| \n| expiryMinutes|number|`Required` The number of minutes by which the authorization would expire | \n| authDetails| |`Required` Collection of authorization payload| \n| type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \n| label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \n| Message|string|`Required` The message that Service Provider should display when rendering input to the customer| \n",
          "summary": "Multiple Transfer To Another Bank",
          "tags": [
            "Transactions"
          ],
          "operationId": "V1TransactionMultipleinterbankTransferPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/MultipleTransferToAnotherBankRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/MultipleTransferToAnotherBank-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "errors": null,
                    "error": null,
                    "transactionRef": "0000000000",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "statusWebHook": 0,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/directdebit/create": {
        "post": {
          "description": "This endpoint creates a direct debit mandate on a customer's account.\r\n\r\n#### Request Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|referenceId|number|`Required` Unique reference ID of the direct debit mandate. This is SP's external reference|\r\n|description|string|`Required` Description of the mandate. This would be displayed to the customer|\r\n|sourceAccount|string|`Required` Account number of the accountholder in NUBAN format|\r\n|sourceAccountName|string|`Required` Accountholder's name |\r\n|maximumAmount|number|`Optional` The maximum amount that can be debited using the specific mandate |\r\n|maximumTransaction|number|`Optional` The maximum number of debits that can be done with the specific mandate |\r\n|sourceCurrency|string|`Required` A 3-character code that represents the currency of source account|\r\n|startDate|date|`Required` The start date of the mandate |\r\n|endDate|date|`Optional` The date at which the mandate expires. Transactions called on the mandate after expiration would fail |\r\n|merchantAccount|string|`Required` Account number of the merchant in NUBAN format|\r\n|merchantAccountName|string|`Required` Merchant's name |\r\n|merchantCurrency|string|`Required` A 3-character code that represents the currency of the merchant's account|\r\n|statusWebHook|string|`Optional` The URL that the FI would call to notify of the Service Provider the status of the transaction. Usually in the format https://{url}/reference/|\r\n\r\n-----------\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|mandateStatus|string|`Required` current mandate status `pending` ,`cancelled`, `valid`, `expired`|  \r\n|mandateID|string|`Required` The unique reference for the mandate created|\r\n|transactionRef |string|`Required` A unique reference provided by the system for the specific transaction| \r\n|validTill|string|`Required` The time in which the authorization token is valid before it is expired| \r\n|expiryMinutes|number|`Required` The number of minutes by which the authorization would expire| \r\n|authDetails| |`Required` Collection of authorization payload| \r\n|type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \r\n|label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \r\n|Message|string|`Required` The message that Service Provider should display when rendering input to the customer|\r\n",
          "summary": "Create Direct Debit",
          "tags": [
            "Direct Debit"
          ],
          "operationId": "V1DirectdebitCreatePost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/CreateDirectDebitRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/CreateDirectDebit-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "mandateStatus": "pending",
                    "mandateID": "MAN1234567890",
                    "transactionRef": "0000000000",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "statusWebHook": 0,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/directdebit/{account}/{mandateId}": {
        "put": {
          "description": "This endpoint modifies direct debit mandate on a customer's account.\n\n#### URL Parameters\n| Parameter |Type |Description |\n| ----------- | ----------- | ----------- |\n|account|number|`Required` Account number of the customer in NUBAN format|\n|mandateId|string|`Required` Unique reference ID of the direct debit mandate. This is the mandate ID provided by the FI|\n\n----\n\n#### Request Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|referenceId|number|`Required` Unique reference ID of the direct debit mandate. This is SP's external reference|\n|description|string|`Required` Description of the mandate. This would be displayed to the customer|\n|sourceAccount|string|`Required` Account number of the accountholder in NUBAN format|\n|sourceAccountName|string|`Required` Accountholder's name |\n|maximumAmount|number|`Optional` The maximum amount that can be debited using the specific mandate |\n|maximumTransaction|number|`Optional` The maximum number of debits that can be done with the specific mandate |\n|sourceCurrency|string|`Required` A 3-character code that represents the currency of source account|\n|startDate|date|`Required` The start date of the mandate |\n|endDate|date|`Optional` The date at which the mandate expires. Transactions called on the mandate after expiration would fail |\n|merchantAccount|string|`Required` Account number of the merchant in NUBAN format|\n|merchantAccountName|string|`Required` Merchant's name |\n|merchantCurrency|string|`Required` A 3-character code that represents the currency of the merchant's account|\n|statusWebHook|string|`Optional` The URL that the FI would call to notify of the Service Provider the status of the transaction. Usually in the format https://{url}/reference/|\n\n-----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|mandate_status|string|`Required` current mandate status `pending` ,`cancelled`, `valid`, `expired`|  \n|next_possible_charge_date|string|`Required` The earliest date a newly created payment for this mandate could be charged|\n|mandateID|string|`Required` The unique reference for the mandate created|\n|transactionRef |string|`Required` A unique reference provided by the system for the specific transaction| \n|validTill|string|`Required` The time in which the authorization token is valid before it is expired| \n|expiryMinutes|number|`Required` The number of minutes by which the authorization would expire| \n|authDetails| |`Required` Collection of authorization payload| \n|type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \n|label|string|`Required` The text of the label that Service Provider would use to collect identity bit when rendering input to the customer| \n|Message|string|`Required` The message that Service Provider should display when rendering input to the customer|\n",
          "summary": "Update Direct Debit",
          "tags": [
            "Direct Debit"
          ],
          "operationId": "V1DirectdebitByAccountAndMandateIdPut",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateDirectDebitRequest"
              }
            },
            {
              "name": "account",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "mandateId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/UpdateDirectDebit-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
                  "data": {
                    "madateStatus": "pending",
                    "mandateID": "MAN1234567890",
                    "transactionRef": "0000000000",
                    "validTill": "yyyyMMddhhttss",
                    "expiryMinutes": 9,
                    "statusWebHook": 0,
                    "authDetails": [
                      {
                        "type": "otp",
                        "label": "6-digit OTP",
                        "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
                      },
                      {
                        "type": "password",
                        "label": "internet banking password",
                        "Message": "Kindly enter your internet banking password"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        },
        "get": {
          "description": "This endpoint retrieves direct debit mandate on a customer's account. \r\n\r\n`This endpoint supports paging`\r\n\r\n#### URL Parameters\r\n| Parameter |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|account|number|`Required` Account number of the customer in NUBAN format|\r\n|mandateId|string|`Required` Unique reference ID of the direct debit mandate. This is the mandate ID provided by the FI|\r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|referenceId|number|`Required` Unique reference ID of the direct debit mandate. This is SP's external reference|\r\n|mandate_status|string|`Required` current mandate status `pending` ,`cancelled`, `valid`, `expired`|  \r\n|next_possible_charge_date|string|`Required` The earliest date a newly created payment for this mandate could be charged|\r\n|mandateId|number|`Required` Unique reference ID of the direct debit mandate. This is the mandate ID provided by the FI|\r\n|description|string|`Required` Description of the mandate. This would be displayed to the customer|\r\n|sourceAccount|string|`Required` Account number of the accountholder in NUBAN format|\r\n|sourceAccountName|string|`Required` Accountholder's name |\r\n|maximumAmount|number|`Optional` The maximum amount that can be debited using the specific mandate |\r\n|maximumTransaction|number|`Optional` The maximum number of debits that can be done with the specific mandate |\r\n|sourceCurrency|string|`Required` A 3-character code that represents the currency of source account|\r\n|startDate|date|`Required` The start date of the mandate |\r\n|endDate|date|`Optional` The date at which the mandate expires. Transactions called on the mandate after expiration would fail |\r\n|merchantAccount|string|`Required` Account number of the merchant in NUBAN format|\r\n|merchantAccountName|string|`Required` Merchant's name |\r\n|merchantCurrency|string|`Required` A 3-character code that represents the currency of the merchant's account|\r\n|statusWebHook|string|`Optional` The URL that the FI would call to notify of the Service Provider the status of the transaction. Usually in the format https://{url}/reference/|",
          "summary": "Get Direct Debit",
          "tags": [
            "Direct Debit"
          ],
          "operationId": "V1DirectdebitByAccountAndMandateIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "mandateId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetDirectDebit-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "mandate_status": "valid",
                    "referenceId": "ABCD12345678901234567890",
                    "mandateId": "MAN1234567890",
                    "description": "Payment for Services of SSL",
                    "sourceAccount": "9876543210",
                    "sourceAccountName": "Solomon Grundy",
                    "maximumAmount": 10000,
                    "maximumTransactions": 10,
                    "sourceCurrency": "NGN",
                    "sourceNarration": "Transfer to Ado",
                    "next_possible_charge_date": "2014-11-10",
                    "startDate": "2018-12-13",
                    "endDate": "2019-12-13",
                    "frequency": "daily|weekly|monthly",
                    "merchantCurrency": "NGN",
                    "merchantAccount": "0123456789",
                    "merchantAccountName": "Some Services Limited",
                    "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/directdebit/{mandateId}/cancel": {
        "post": {
          "description": "This endpoint cancels the direct debit mandate on a customer's account.\n\n#### URL Parameters\n| Parameter |Type |Description |\n| ----------- | ----------- | ----------- |\n|mandateId|string|`Required` Unique reference ID of the direct debit mandate. This is the mandate ID provided by the FI|\n\n\n----\n\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|mandate_status|string|`Required` current mandate status `pending` ,`cancelled`, `active`|\n|next_possible_charge_date|string|`Required` The earliest date a newly created payment for this mandate could be charged|\n|referenceId|number|`Required` Unique reference ID of the direct debit mandate. This is SP's external reference|\n|statusWebHook|string|`Optional` The URL that the FI would call to notify of the Service Provider the status of the transaction. Usually in the format https://{url}/reference/|",
          "summary": "Cancel Direct Debit",
          "tags": [
            "Direct Debit"
          ],
          "operationId": "V1DirectdebitCancelByMandateIdPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "mandateId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/CancelDirectDebit-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "mandate_status": "cancelled",
                    "next_possible_charge_date": "null",
                    "referenceId": "ABCD12345678901234567890",
                    "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/directdebit/{mandateId}/pay": {
        "post": {
          "description": "This endpoints fires a transaction against a previously set direct debit mandate on a customer's account\n\n#### URL Parameters\n\n| Parameter |Type |Description |\n| ----------- | ----------- | ----------- |\n|mandateId|string|`Required` Unique reference ID of the direct debit mandate. This is the mandate ID provided by the FI|\n\n----\n#### Request Parameters\n\n| Parameter |Type |Description |\n| ----------- | ----------- | ----------- |\n|amount|string|`Required` Amount to be debited from the customer|\n\n----\n\n#### Response Body Field\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n|amountDebitted|number|`Required` Amount debited from the customer account|\n|mandate_status|string|`Required` current mandate status `pending` ,`cancelled`, `valid`, `expired`|  \n|next_possible_charge_date|string|`Required` The earliest date a newly created payment for this mandate could be charged|\n|transactionRef|number|`Required` A unique reference provided by the system for the specific transaction|\n|statusWebHook|string|`Optional` The URL that the FI would call to notify of the Service Provider the status of the transaction. Usually in the format https://{url}/reference/|",
          "summary": "Pay Direct Debit",
          "tags": [
            "Direct Debit"
          ],
          "operationId": "V1DirectdebitPayByMandateIdPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/PayDirectDebitRequest"
              }
            },
            {
              "name": "mandateId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/PayDirectDebit-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "Payment successful",
                  "data": {
                    "mandate_status": "valid",
                    "referenceId": "ABCD12345678901234567890",
                    "amountDebited": "2000",
                    "next_possible_charge_date": "2014-11-10",
                    "transactionRef": "0000000000",
                    "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/PayDirectDebit-Mandateinvalid"
              },
              "examples": {
                "application/json": {
                  "status": "61",
                  "message": "Mandate called too many times",
                  "data": {
                    "mandate_status": "active"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/PayDirectDebit-Mandateinvalid"
              },
              "examples": {
                "application/json": {
                  "status": "07",
                  "message": "account exppired",
                  "data": {
                    "mandate_status": "expired"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/fraud/report": {
        "post": {
          "description": "This endpoint allows the service provider to report fraud directly to the bank or financial institution.\r\n\r\n#### Request Parameter\r\n\r\n| Parameter|Type |Description |\r\n|--|--|--|\r\n|reportingReference|string |`Required` The unique identifier for the fraud report generated by the service provider |\r\n|customerID |string |` Optional ` A unique identifier for a customer as defined by a Bank |\r\n|accountNumber|string |` Optional ` The account number of the customer in `NUBAN` format|\r\n|bvn |string |`Optional` The `Bank Verification Number` of the customer |\r\n|phoneNumber |String |`Optional` customer phone number \r\n|email |String |`Optional` customer email address |\r\n|fraudCategory|String |`Required` The category of the fraud, as defined by the bank such as `SIM Swap`, `Stolen PIN` |\r\n|fraudDescription|String |` Required ` A description of the fraud |\r\n\r\n#### Response Parameters\r\n\r\n| Parameter|Type |Description |\r\n|--|--|--|\r\n| reportingReference |string |`Required` Echo of the reporting reference of the service provider`|\r\n",
          "summary": "Report a Fraud",
          "tags": [
            "Fraud"
          ],
          "operationId": "V1FraudReportPost",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "Body",
              "in": "body",
              "required": true,
              "description": "",
              "schema": {
                "$ref": "#/definitions/ReportaFraudRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/ReportaFraud-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": {
                    "reportingReference": "0091234",
                    "expansionFields": [
                      {
                        "id": "Some random ID",
                        "description": "Some random text",
                        "type": "Some random type",
                        "value": "Some value"
                      }
                    ]
                  }
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/fraud/categories": {
        "get": {
          "description": "This endpoint return a list of fraud categories.\n\n#### Response Parameters\n\n| Parameter|Type |Description |\n|--|--|--|\n| code|string |`Required` Fraud type code`|\n| name|string |`Required` Name of the fraud`|",
          "summary": "Fraud Categories",
          "tags": [
            "Fraud"
          ],
          "operationId": "V1FraudCategoriesGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/FraudCategories-Success"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "The process was completed successfully",
                  "data": [
                    {
                      "code": "01",
                      "name": "Identity theft"
                    }
                  ],
                  "expansionFields": [
                    {
                      "id": "Some random ID",
                      "description": "Some random text",
                      "type": "Some random type",
                      "value": "Some value"
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/billpayment/biller/{billerId}/items": {
        "get": {
          "description": "This endpoint gets a list of payments made.\n`This endpoint support paging`\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| billerId|string |`Required` This is a ID of the biller as defined by the bank|\n\n",
          "summary": "Get Bill payment Items",
          "tags": [
            "BillPayment"
          ],
          "operationId": "V1BillpaymentBillerItemsByBillerIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "billerId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetBillpaymentItems"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "SUCCESSFUL",
                  "data": [
                    {
                      "billingSystemId": "1",
                      "categoryId": "1",
                      "billerId": "1",
                      "billPaymentProductId": "1",
                      "billPaymentProductName": "Electricity",
                      "fixedOrVariableAmount": "1000"
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/billpayment/billers/categories": {
        "get": {
          "description": "This endpoint gets a list of bill categories available.",
          "summary": "Get Bill Categories",
          "tags": [
            "BillPayment"
          ],
          "operationId": "V1BillpaymentBillersCategoriesGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetBillCategories"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "SUCCESSFUL",
                  "data": [
                    {
                      "billingSystemId": "1",
                      "categoryName": "Electricity",
                      "categoryDescription": "Electricity"
                    },
                    {
                      "billingSystemId": "2",
                      "categoryName": "Cable TV",
                      "categoryDescription": "Cable tv subscriptions"
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/billpayment/billers/{billerId}": {
        "get": {
          "description": "This endpoint gets a specific biller by specifying the biller id. Biller IDs are defined for each biller. This would have been given by the bank.\n\n\n#### URL Parameters\n\n| Parameter |Type |Description  |\n|--|--|--|\n| billerId|string |`Required` This is a ID of the biller as defined by the bank|\n\n",
          "summary": "Get Biller",
          "tags": [
            "BillPayment"
          ],
          "operationId": "V1BillpaymentBillersByBillerIdGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            },
            {
              "name": "billerId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetBiller"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "SUCCESSFUL",
                  "data": [
                    {
                      "categoryId": "1",
                      "billerCategory": "Electricity",
                      "categoryDescription": "Electricity Token",
                      "billerId": "1",
                      "nameOfBiller": "EKDEC",
                      "customerId": "1",
                      "currency": "NAIRA"
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      },
      "/v1/billpayment/systems": {
        "get": {
          "description": "## Response Class (Status 200)\r\nOK",
          "summary": "Get Billing System",
          "tags": [
            "BillPayment"
          ],
          "operationId": "V1BillpaymentSystemsGet",
          "deprecated": false,
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "required": true,
              "type": "string",
              "description": ""
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "schema": {
                "$ref": "#/definitions/GetBillingSystems"
              },
              "examples": {
                "application/json": {
                  "status": "00",
                  "message": "SUCCESSFUL",
                  "data": [
                    {
                      "billingSystemId": "1",
                      "billingaSystemName": null
                    }
                  ]
                }
              },
              "headers": {}
            }
          }
        }
      }
    },
    "definitions": {
      "meta": {
        "title": "meta",
        "example": {
          "issuer": "{{url}}/oauth2/v1",
          "authorization_endpoint": "{{url}}/oauth2/v1//authorize",
          "token_endpoint": "{{url}}/oauth2/v1//token",
          "userinfo_endpoint": "{{url}}/oauth2/v1//userinfo",
          "registration_endpoint": "https://mytaxi.okta-emea.com/oauth2/v1/clients",
          "jwks_uri": "{{url}}/oauth2/v1//keys",
          "response_types_supported": [
            "code",
            "id_token",
            "code id_token",
            "code token",
            "id_token token",
            "code id_token token"
          ],
          "response_modes_supported": [
            "query",
            "fragment",
            "form_post"
          ],
          "grant_types_supported": [
            "authorization_code",
            "implicit",
            "refresh_token"
          ],
          "subject_types_supported": [
            "public"
          ],
          "id_token_signing_alg_values_supported": [
            "RS256"
          ],
          "scopes_supported": [
            "openid",
            "profile",
            "email",
            "address",
            "phone",
            "account",
            "transaction",
            "branch",
            "atm",
            "pos",
            "customer",
            "fraud"
          ],
          "token_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt",
            "none"
          ],
          "claims_supported": [
            "iss",
            "ver",
            "sub",
            "aud",
            "iat",
            "exp",
            "jti",
            "auth_time",
            "amr",
            "idp",
            "nonce",
            "name",
            "nickname",
            "preferred_username",
            "given_name",
            "middle_name",
            "family_name",
            "email",
            "email_verified",
            "profile",
            "zoneinfo",
            "locale",
            "address",
            "phone_number",
            "picture",
            "website",
            "gender",
            "updated_at",
            "at_hash",
            "c_hash",
            "account_read",
            "account_write",
            "transaction_read",
            "transaction_write",
            "branch_read",
            "atm_read",
            "pos_read",
            "customer_read",
            "customer_write",
            "fraud_write"
          ],
          "code_challenge_methods_supported": [
            "S256"
          ],
          "introspection_endpoint": "{{url}}/oauth2/v1//introspect",
          "introspection_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt",
            "none"
          ],
          "revocation_endpoint": "{{url}}/oauth2/v1//revoke",
          "revocation_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt",
            "none"
          ],
          "end_session_endpoint": "{{url}}/oauth2/v1//logout",
          "request_parameter_supported": true,
          "request_object_signing_alg_values_supported": [
            "HS256",
            "HS384",
            "HS512",
            "RS256",
            "RS384",
            "RS512",
            "ES256",
            "ES384",
            "ES512"
          ]
        },
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string"
          },
          "authorization_endpoint": {
            "type": "string"
          },
          "token_endpoint": {
            "type": "string"
          },
          "userinfo_endpoint": {
            "type": "string"
          },
          "registration_endpoint": {
            "type": "string"
          },
          "jwks_uri": {
            "type": "string"
          },
          "response_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "response_modes_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "grant_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id_token_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "code_challenge_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "introspection_endpoint": {
            "type": "string"
          },
          "introspection_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "revocation_endpoint": {
            "type": "string"
          },
          "revocation_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "end_session_endpoint": {
            "type": "string"
          },
          "request_parameter_supported": {
            "type": "boolean"
          },
          "request_object_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "issuer",
          "authorization_endpoint",
          "token_endpoint",
          "userinfo_endpoint",
          "registration_endpoint",
          "jwks_uri",
          "response_types_supported",
          "response_modes_supported",
          "grant_types_supported",
          "subject_types_supported",
          "id_token_signing_alg_values_supported",
          "scopes_supported",
          "token_endpoint_auth_methods_supported",
          "claims_supported",
          "code_challenge_methods_supported",
          "introspection_endpoint",
          "introspection_endpoint_auth_methods_supported",
          "revocation_endpoint",
          "revocation_endpoint_auth_methods_supported",
          "end_session_endpoint",
          "request_parameter_supported",
          "request_object_signing_alg_values_supported"
        ]
      },
      "ObtainToken": {
        "title": "ObtainToken",
        "example": {
          "access_token": "eyJhbGciOiJSUzI1NiJ9.eyJ2ZXIiOjEsImlzcyI6Imh0dHA6Ly9yYWluLm9rdGExLmNvbToxODAyIiwiaWF0IjoxNDQ5Nj                     I0MDI2LCJleHAiOjE0NDk2Mjc2MjYsImp0aSI6IlVmU0lURzZCVVNfdHA3N21BTjJxIiwic2NvcGVzIjpbIm9wZW5pZCIsI                      mVtYWlsIl0sImNsaWVudF9pZCI6InVBYXVub2ZXa2FESnh1a0NGZUJ4IiwidXNlcl9pZCI6IjAwdWlkNEJ4WHc2STZUVjRt                      MGczIn0.HaBu5oQxdVCIvea88HPgr2O5evqZlCT4UXH4UKhJnZ5px-ArNRqwhxXWhHJisslswjPpMkx1IgrudQIjzGYbtLF                      jrrg2ueiU5-YfmKuJuD6O2yPWGTsV7X6i7ABT6P-t8PRz_RNbk-U1GXWIEkNnEWbPqYDAm_Ofh7iW0Y8WDA5ez1jbtMvd-o                      XMvJLctRiACrTMLJQ2e5HkbUFxgXQ_rFPNHJbNSUBDLqdi2rg_ND64DLRlXRY7hupNsvWGo0gF4WEUk8IZeaLjKw8UoIs-E                      TEwJlAMcvkhoVVOsN5dPAaEKvbyvPC1hUGXb4uuThlwdD3ECJrtwgKqLqcWonNtiw",
          "token_type": "Bearer",
          "expires_in": 3600,
          "scope": "openid email",
          "refresh_token": "a9VpZDRCeFh3Nkk2VdY",
          "id_token": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIwMHVpZDRCeFh3Nkk2VFY0bTBnMyIsImVtYWlsIjoid2VibWFzdGVyQGNsb3VkaXR1ZG            UubmV0IiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInZlciI6MSwiaXNzIjoiaHR0cDovL3JhaW4ub2t0YTEuY29tOjE4MDIiLCJsb                2dpbiI6ImFkbWluaXN0cmF0b3IxQGNsb3VkaXR1ZGUubmV0IiwiYXVkIjoidUFhdW5vZldrYURKeHVrQ0ZlQngiLCJpYXQiOjE0                  NDk2MjQwMjYsImV4cCI6MTQ0OTYyNzYyNiwiYW1yIjpbInB3ZCJdLCJqdGkiOiI0ZUFXSk9DTUIzU1g4WGV3RGZWUiIsImF1dGh                  fdGltZSI6MTQ0OTYyNDAyNiwiYXRfaGFzaCI6ImNwcUtmZFFBNWVIODkxRmY1b0pyX1EifQ.Btw6bUbZhRa89DsBb8KmL9rfhku                  --_mbNC2pgC8yu8obJnwO12nFBepui9KzbpJhGM91PqJwi_AylE6rp-ehamfnUAO4JL14PkemF45Pn3u_6KKwxJnxcWxLvMuuis                  nvIs7NScKpOAab6ayZU0VL8W6XAijQmnYTtMWQfSuaaR8rYOaWHrffh3OypvDdrQuYacbkT0csxdrayXfBG3UF5-ZAlhfch1fhF                  T3yZFdWwzkSDc0BGygfiFyNhCezfyT454wbciSZgrA9ROeHkfPCaX7KCFO8GgQEkGRoQntFBNjluFhNLJIUkEFovEDlfuB4tv_M                  8BM75celdy3jkpOurg"
        },
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "scope",
          "refresh_token",
          "id_token"
        ]
      },
      "GetSiginingKeys": {
        "title": "GetSiginingKeys",
        "example": {
          "keys": [
            {
              "kty": "RSA",
              "alg": "RS256",
              "kid": "Mrcyxwvwy-uYa-hu-wRYYmixe9TNa2IJhG-tPywUeBc",
              "use": "sig",
              "e": "AQAB",
              "n": "k4YD17sny25O6Gm46j-qjkYe3NJYYSfeTqqCnXPr0fjq0uh_kAUQNQEEaMmWCY1lxVPQ_SGVGARY-BrSyLdG-IOBB1H0juuGtDdtKQORVHqhU9Imwjbkac0l-g7LFYfWI1eEGG-4ikW7mUyvt9sYzuNGEKkuGQzk0lro2Gg6F-TD7UIQMgt8l9xmEtmoi-bNBXLEVyvwOkU8y11rFwtjHj6aqERaEY0Dl_Q7yGinxuGtGV_04HY6Zqs-uzGF6WD96-9qJYhZLVU2xlZpCZ0OXb-SdvEDBEzTiimw0xQdS_OKNjmPhDI4QrBY5GmZ6xY2dwoGvDX_aqghL_hwyOf9Yw"
            },
            {
              "kty": "RSA",
              "alg": "RS256",
              "kid": "Esh3ywWkvkGl1ofqvSUtiKlSIir04maybGu1N5U4V1o",
              "use": "sig",
              "e": "AQAB",
              "n": "iRH0e79TIcLhX_5BSmM1D0cts8H2Hk-kodcaPik1CyKDgczAHV9vuadE7unzYnobqQxwiv6rAxZO-LHUztkSQ0Y5ymA6fnBYVVv8RWxH8GryxfaFfLHzNuVt9fPxsQ7E_mVyQa6vuGjDAbrOisZ56HUktuMBm3PSt6Z3nR7PpSGp4pqZMnlVI8ZBmUghyEcFIow9Y-rJDdx1-_U00A6B_bltqHXH1-d_uWLLvQPZ5-EpmXtdUcUbkRZlp4gf8gHyjImlsFzXqrXu2GcBpOsCLOxaE4x4iKBlI0mm5n6lQ4Nb0Cqev1Kml9SXMFSRDknj3IYlxudvgJI7EznOqzbI-w"
            }
          ]
        },
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "required": [
          "keys"
        ]
      },
      "Key": {
        "title": "Key",
        "example": {
          "kty": "RSA",
          "alg": "RS256",
          "kid": "Mrcyxwvwy-uYa-hu-wRYYmixe9TNa2IJhG-tPywUeBc",
          "use": "sig",
          "e": "AQAB",
          "n": "k4YD17sny25O6Gm46j-qjkYe3NJYYSfeTqqCnXPr0fjq0uh_kAUQNQEEaMmWCY1lxVPQ_SGVGARY-BrSyLdG-IOBB1H0juuGtDdtKQORVHqhU9Imwjbkac0l-g7LFYfWI1eEGG-4ikW7mUyvt9sYzuNGEKkuGQzk0lro2Gg6F-TD7UIQMgt8l9xmEtmoi-bNBXLEVyvwOkU8y11rFwtjHj6aqERaEY0Dl_Q7yGinxuGtGV_04HY6Zqs-uzGF6WD96-9qJYhZLVU2xlZpCZ0OXb-SdvEDBEzTiimw0xQdS_OKNjmPhDI4QrBY5GmZ6xY2dwoGvDX_aqghL_hwyOf9Yw"
        },
        "type": "object",
        "properties": {
          "kty": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "n": {
            "type": "string"
          }
        },
        "required": [
          "kty",
          "alg",
          "kid",
          "use",
          "e",
          "n"
        ]
      },
      "GetUserInformation": {
        "title": "GetUserInformation",
        "example": {
          "sub": "00uid4BxXw6I6TV4m0g3",
          "name": "John Doe",
          "nickname": "Jimmy",
          "given_name": "John",
          "middle_name": "James",
          "family_name": "Doe",
          "profile": "{{url}}/v1/customer/{customerId}",
          "zoneinfo": "Africa/Lagos",
          "locale": "en-US",
          "updated_at": 1311280970,
          "email": "john.doe@example.com",
          "email_verified": true,
          "address": {
            "street_address": "123 Lekki Phase 1.",
            "locality": "Lagos",
            "region": "LA",
            "postal_code": 101320,
            "country": "NG"
          },
          "phone_number": "+234 (803) 555-1212"
        },
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "given_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "family_name": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "zoneinfo": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "updated_at": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/definitions/Address"
          },
          "phone_number": {
            "type": "string"
          }
        },
        "required": [
          "sub",
          "name",
          "nickname",
          "given_name",
          "middle_name",
          "family_name",
          "profile",
          "zoneinfo",
          "locale",
          "updated_at",
          "email",
          "email_verified",
          "address",
          "phone_number"
        ]
      },
      "Address": {
        "title": "Address",
        "example": {
          "street_address": "123 Lekki Phase 1.",
          "locality": "Lagos",
          "region": "LA",
          "postal_code": 101320,
          "country": "NG"
        },
        "type": "object",
        "properties": {
          "street_address": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "postal_code": {
            "type": "integer",
            "format": "int32"
          },
          "country": {
            "type": "string"
          }
        },
        "required": [
          "street_address",
          "locality",
          "region",
          "postal_code",
          "country"
        ]
      },
      "GeneralInformation-Success": {
        "title": "GeneralInformation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "bankName": "ABC Bank Plc.",
            "description": "The number one bank",
            "location": {
              "street": "123 Somewhere Street, Victoria Island",
              "city": "Lagos",
              "state": "Lagos",
              "country": "NG",
              "geoLocation": {
                "latitude": 7.332014,
                "longitude": 3.86888
              }
            },
            "swiftCode": "ABCNGLA",
            "nibssCode": "000123",
            "cbnBankCode": "123",
            "numberOfBranches": 300,
            "incorporationDate": "2000-12-01",
            "rcNumber": "RC000123",
            "website": "https://www.abcbank.ng",
            "bankCategory": "National",
            "logo": "https://images.abcbank.ng/wp-content/randomupload/logo.png",
            "contactInfo": [
              {
                "description": "Customer support email",
                "type": "email",
                "value": "support@abcbank.ng"
              }
            ],
            "socialMedia": [
              {
                "description": "Instagram",
                "type": "IG",
                "value": "@abcbank"
              },
              {
                "description": "Facebook",
                "type": "FB",
                "value": "@abcbank"
              }
            ],
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data": {
        "title": "GeneralInformation-Success",
        "example": {
          "bankName": "ABC Bank Plc.",
          "description": "The number one bank",
          "location": {
            "street": "123 Somewhere Street, Victoria Island",
            "city": "Lagos",
            "state": "Lagos",
            "country": "NG",
            "geoLocation": {
              "latitude": 7.332014,
              "longitude": 3.86888
            }
          },
          "swiftCode": "ABCNGLA",
          "nibssCode": "000123",
          "cbnBankCode": "123",
          "numberOfBranches": 300,
          "incorporationDate": "2000-12-01",
          "rcNumber": "RC000123",
          "website": "https://www.abcbank.ng",
          "bankCategory": "National",
          "logo": "https://images.abcbank.ng/wp-content/randomupload/logo.png",
          "contactInfo": [
            {
              "description": "Customer support email",
              "type": "email",
              "value": "support@abcbank.ng"
            }
          ],
          "socialMedia": [
            {
              "description": "Instagram",
              "type": "IG",
              "value": "@abcbank"
            },
            {
              "description": "Facebook",
              "type": "FB",
              "value": "@abcbank"
            }
          ],
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/Location"
          },
          "swiftCode": {
            "type": "string"
          },
          "nibssCode": {
            "type": "string"
          },
          "cbnBankCode": {
            "type": "string"
          },
          "numberOfBranches": {
            "type": "integer",
            "format": "int32"
          },
          "incorporationDate": {
            "type": "string"
          },
          "rcNumber": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "bankCategory": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "contactInfo": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContactInfo"
            }
          },
          "socialMedia": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SocialMedium"
            }
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "bankName",
          "description",
          "location",
          "swiftCode",
          "nibssCode",
          "cbnBankCode",
          "numberOfBranches",
          "incorporationDate",
          "rcNumber",
          "website",
          "bankCategory",
          "logo",
          "contactInfo",
          "socialMedia",
          "expansionFields"
        ]
      },
      "Location": {
        "title": "Location",
        "example": {
          "street": "123 Somewhere Street, Victoria Island",
          "city": "Lagos",
          "state": "Lagos",
          "country": "NG",
          "geoLocation": {
            "latitude": 7.332014,
            "longitude": 3.86888
          }
        },
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "geoLocation": {
            "$ref": "#/definitions/GeoLocation"
          }
        },
        "required": [
          "street",
          "city",
          "state",
          "country",
          "geoLocation"
        ]
      },
      "GeoLocation": {
        "title": "GeoLocation",
        "example": {
          "latitude": 7.332014,
          "longitude": 3.86888
        },
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "ContactInfo": {
        "title": "ContactInfo",
        "example": {
          "description": "Customer support email",
          "type": "email",
          "value": "support@abcbank.ng"
        },
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "type",
          "value"
        ]
      },
      "SocialMedium": {
        "title": "SocialMedium",
        "example": {
          "description": "Instagram",
          "type": "IG",
          "value": "@abcbank"
        },
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "type",
          "value"
        ]
      },
      "ExpansionField": {
        "title": "ExpansionField",
        "example": {
          "id": "Some random ID",
          "description": "Some random text",
          "type": "Some random type",
          "value": "Some value"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "description",
          "type",
          "value"
        ]
      },
      "VersionInformation-Success": {
        "title": "VersionInformation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "number": "1.0",
              "deployDate": "yyyymmdd",
              "code": "v1",
              "isPrimary": true
            },
            {
              "number": "2.0",
              "deployDate": "yyyymmdd",
              "code": "v2",
              "isPrimary": false
            },
            {
              "number": "3.0",
              "deployDate": "yyyymmdd",
              "code": "v3",
              "isPrimary": false
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data1"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data1": {
        "title": "VersionInformation",
        "example": {
          "number": "1.0",
          "deployDate": "yyyymmdd",
          "code": "v1",
          "isPrimary": true
        },
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "deployDate": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          }
        },
        "required": [
          "number",
          "deployDate",
          "code",
          "isPrimary"
        ]
      },
      "GetProducts-Success": {
        "title": "GetProducts-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "name": "ABC Savings Account",
              "productId": "ABCSBA001",
              "productCategory": "Accounts",
              "productType": "account",
              "description": "The best savings account money can buy",
              "currencies": "NGN"
            },
            {
              "name": "ABC Domiciliary Account",
              "productId": "ABCUSD001",
              "productType": "account",
              "productCategory": "Accounts",
              "description": "The best domiciliary account in Nigeria",
              "currencies": "USD"
            },
            {
              "name": "ABC Naira Mastercard",
              "productId": "ABCMC001",
              "productType": "debitCard",
              "productCategory": "Cards",
              "description": "Spend anywhere your heart desires",
              "currencies": "NGN"
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data2"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data2": {
        "title": "GetProducts - Success",
        "example": {
          "name": "ABC Savings Account",
          "productId": "ABCSBA001",
          "productCategory": "Accounts",
          "productType": "account",
          "description": "The best savings account money can buy",
          "currencies": "NGN"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "productCategory": {
            "type": "string"
          },
          "productType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currencies": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "productId",
          "productCategory",
          "productType",
          "description",
          "currencies"
        ]
      },
      "GetPerformance-Success": {
        "title": "GetPerformance-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "function": "getAccount",
              "metricStartTime": "2019-05-31 08:55:23",
              "metricEndTime": "2019-05-31 08:55:23",
              "minimumResponseTime": 100,
              "averageResponseTime": 500,
              "maximumReponseTime": 1233,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            },
            {
              "function": "getMeta",
              "metricStartTime": "2019-05-31 08:55:23",
              "metricEndTime": "2019-05-31 08:55:23",
              "minimumResponseTime": 200,
              "averageResponseTime": 300,
              "maximumReponseTime": 599,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data3"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data3": {
        "title": "GetPerformance-Success",
        "example": {
          "function": "getAccount",
          "metricStartTime": "2019-05-31 08:55:23",
          "metricEndTime": "2019-05-31 08:55:23",
          "minimumResponseTime": 100,
          "averageResponseTime": 500,
          "maximumReponseTime": 1233,
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "function": {
            "type": "string"
          },
          "metricStartTime": {
            "type": "string"
          },
          "metricEndTime": {
            "type": "string"
          },
          "minimumResponseTime": {
            "type": "integer",
            "format": "int32"
          },
          "averageResponseTime": {
            "type": "integer",
            "format": "int32"
          },
          "maximumReponseTime": {
            "type": "integer",
            "format": "int32"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "function",
          "metricStartTime",
          "metricEndTime",
          "minimumResponseTime",
          "averageResponseTime",
          "maximumReponseTime",
          "expansionFields"
        ]
      },
      "AllBranches-Success": {
        "title": "AllBranches-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "branchs": [
            {
              "branchId": "0123",
              "branchName": "Alaba Oriole Branch",
              "branchType": "Full Branch",
              "description": "A random fancy branch",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "contactInfo": [
                {
                  "description": "Customer support email",
                  "type": "email",
                  "value": "support@abcbank.ng"
                },
                {
                  "description": "Customer support phone",
                  "type": "phone",
                  "value": "+234 2 345 6789"
                }
              ],
              "numberOfATMs": 2,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "branchs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Branch"
            }
          }
        },
        "required": [
          "status",
          "message",
          "branchs"
        ]
      },
      "Branch": {
        "title": "Branch",
        "example": {
          "branchId": "0123",
          "branchName": "Alaba Oriole Branch",
          "branchType": "Full Branch",
          "description": "A random fancy branch",
          "location": {
            "street": "123 Karaole Street",
            "city": "Ibadan",
            "state": "Oyo",
            "country": "NG",
            "geoLocation": {
              "latitude": 7.332014,
              "longitude": 3.86888
            }
          },
          "contactInfo": [
            {
              "description": "Customer support email",
              "type": "email",
              "value": "support@abcbank.ng"
            },
            {
              "description": "Customer support phone",
              "type": "phone",
              "value": "+234 2 345 6789"
            }
          ],
          "numberOfATMs": 2,
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "branchType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/Location"
          },
          "contactInfo": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContactInfo"
            }
          },
          "numberOfATMs": {
            "type": "integer",
            "format": "int32"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "branchId",
          "branchName",
          "branchType",
          "description",
          "location",
          "contactInfo",
          "numberOfATMs",
          "expansionFields"
        ]
      },
      "GetaSpecificBranch-Success": {
        "title": "GetaSpecificBranch-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "branch": [
            {
              "branchId": "0123",
              "branchName": "Alaba Oriole Branch",
              "branchType": "Full Branch",
              "description": "A random fancy branch",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "contactInfo": [
                {
                  "description": "Customer support email",
                  "type": "email",
                  "value": "support@abcbank.ng"
                },
                {
                  "description": "Customer support phone",
                  "type": "phone",
                  "value": "+234 2 345 6789"
                }
              ],
              "numberOfATMs": 2,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "branch": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Branch"
            }
          }
        },
        "required": [
          "status",
          "message",
          "branch"
        ]
      },
      "GetBranchbyLocation-Success": {
        "title": "GetBranchbyLocation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "branchId": "0123",
              "branchName": "Alaba Oriole Branch",
              "branchType": "Full Branch",
              "description": "A random fancy branch",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888,
                  "radius": "600m"
                }
              },
              "contactInfo": [
                {
                  "description": "Customer support email",
                  "type": "email",
                  "value": "support@abcbank.ng"
                },
                {
                  "description": "Customer support phone",
                  "type": "phone",
                  "value": "+234 2 345 6789"
                }
              ],
              "numberOfATMs": 2,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data4"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data4": {
        "title": "GetBranchbyLocation-Success",
        "example": {
          "branchId": "0123",
          "branchName": "Alaba Oriole Branch",
          "branchType": "Full Branch",
          "description": "A random fancy branch",
          "location": {
            "street": "123 Karaole Street",
            "city": "Ibadan",
            "state": "Oyo",
            "country": "NG",
            "geoLocation": {
              "latitude": 7.332014,
              "longitude": 3.86888,
              "radius": "600m"
            }
          },
          "contactInfo": [
            {
              "description": "Customer support email",
              "type": "email",
              "value": "support@abcbank.ng"
            },
            {
              "description": "Customer support phone",
              "type": "phone",
              "value": "+234 2 345 6789"
            }
          ],
          "numberOfATMs": 2,
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "branchType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/Location3"
          },
          "contactInfo": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContactInfo"
            }
          },
          "numberOfATMs": {
            "type": "integer",
            "format": "int32"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "branchId",
          "branchName",
          "branchType",
          "description",
          "location",
          "contactInfo",
          "numberOfATMs",
          "expansionFields"
        ]
      },
      "Location3": {
        "title": "Location3",
        "example": {
          "street": "123 Karaole Street",
          "city": "Ibadan",
          "state": "Oyo",
          "country": "NG",
          "geoLocation": {
            "latitude": 7.332014,
            "longitude": 3.86888,
            "radius": "600m"
          }
        },
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "geoLocation": {
            "$ref": "#/definitions/GeoLocation3"
          }
        },
        "required": [
          "street",
          "city",
          "state",
          "country",
          "geoLocation"
        ]
      },
      "GeoLocation3": {
        "title": "GeoLocation3",
        "example": {
          "latitude": 7.332014,
          "longitude": 3.86888,
          "radius": "600m"
        },
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "radius": {
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude",
          "radius"
        ]
      },
      "GetAllATMs-Success": {
        "title": "GetAllATMs-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "atmId": "0091234",
              "terminalId": "10091234",
              "branchID": "0234",
              "description": "NCR ATM at Karaole Street Branch, Ibadan",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "baseCurrency": "NGN",
              "minimumCashAmount": 5,
              "ATMServices": [
                "CashWithdrawal",
                "PINChange",
                "MobilePhoneTopUp",
                "Balance",
                "MiniStatement"
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            },
            {
              "atmId": "0091235",
              "terminalId": "10091235",
              "branchID": "0234",
              "description": "Wincor ATM at Karaole Street Branch, Ibadan",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "baseCurrency": "NGN",
              "minimumCashAmount": 5,
              "ATMServices": [
                "CashWithdrawal",
                "PINChange",
                "Balance",
                "MiniStatement",
                "Quickteller"
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data5"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data5": {
        "title": "GetAllATMs-Success",
        "example": {
          "atmId": "0091234",
          "terminalId": "10091234",
          "branchID": "0234",
          "description": "NCR ATM at Karaole Street Branch, Ibadan",
          "location": {
            "street": "123 Karaole Street",
            "city": "Ibadan",
            "state": "Oyo",
            "country": "NG",
            "geoLocation": {
              "latitude": 7.332014,
              "longitude": 3.86888
            }
          },
          "baseCurrency": "NGN",
          "minimumCashAmount": 5,
          "ATMServices": [
            "CashWithdrawal",
            "PINChange",
            "MobilePhoneTopUp",
            "Balance",
            "MiniStatement"
          ],
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "atmId": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "branchID": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/Location"
          },
          "baseCurrency": {
            "type": "string"
          },
          "minimumCashAmount": {
            "type": "integer",
            "format": "int32"
          },
          "ATMServices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "atmId",
          "terminalId",
          "branchID",
          "description",
          "location",
          "baseCurrency",
          "minimumCashAmount",
          "ATMServices",
          "expansionFields"
        ]
      },
      "FindATMbyTerminalId": {
        "title": "FindATMbyTerminalId",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "atmId": "0091234",
            "terminalId": "10091234",
            "branchID": "0234",
            "description": "NCR ATM at Karaole Street Branch, Ibadan",
            "location": {
              "street": "123 Karaole Street",
              "city": "Ibadan",
              "state": "Oyo",
              "country": "NG",
              "geoLocation": {
                "latitude": 7.332014,
                "longitude": 3.86888
              }
            },
            "baseCurrency": "NGN",
            "minimumCashAmount": 5,
            "ATMServices": [
              "CashWithdrawal",
              "PINChange",
              "MobilePhoneTopUp",
              "Balance",
              "MiniStatement"
            ],
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data5"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetATMbyBranch-Success": {
        "title": "GetATMbyBranch-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "atmId": "0091234",
              "terminalId": "10091234",
              "branchID": "0234",
              "description": "NCR ATM at Karaole Street Branch, Ibadan",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "baseCurrency": "NGN",
              "minimumCashAmount": 5,
              "ATMServices": [
                "CashWithdrawal",
                "PINChange",
                "MobilePhoneTopUp",
                "Balance",
                "MiniStatement"
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            },
            {
              "atmId": "0091235",
              "terminalId": "10091235",
              "branchID": "0234",
              "description": "Wincor ATM at Karaole Street Branch, Ibadan",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "baseCurrency": "NGN",
              "minimumCashAmount": 5,
              "ATMServices": [
                "CashWithdrawal",
                "PINChange",
                "Balance",
                "MiniStatement",
                "Quickteller"
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data5"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetATMByLocation-Success": {
        "title": "GetATMByLocation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "atmId": "0091234",
              "terminalId": "10091234",
              "branchID": "0234",
              "description": "NCR ATM at Karaole Street Branch, Ibadan",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "baseCurrency": "NGN",
              "minimumCashAmount": 5,
              "ATMServices": [
                "CashWithdrawal",
                "PINChange",
                "MobilePhoneTopUp",
                "Balance",
                "MiniStatement"
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            },
            {
              "atmId": "0091235",
              "terminalId": "10091235",
              "branchID": "0234",
              "description": "Wincor ATM at Karaole Street Branch, Ibadan",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "baseCurrency": "NGN",
              "minimumCashAmount": 5,
              "ATMServices": [
                "CashWithdrawal",
                "PINChange",
                "Balance",
                "MiniStatement",
                "Quickteller"
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data5"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "AllAllAgents-Success": {
        "title": "AllAllAgents-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "agentId": "0123",
              "agentName": "Alaba Oriole agent",
              "agentType": "Full Service Agent",
              "description": "Alagbole Supermarket",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "contactInfo": [
                {
                  "description": "Agent email",
                  "type": "email",
                  "value": "alagbolesupermarket@example.com"
                },
                {
                  "description": "Agent phone",
                  "type": "phone",
                  "value": "08012345678"
                }
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data9"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data9": {
        "title": "AllAllAgents-Success",
        "example": {
          "agentId": "0123",
          "agentName": "Alaba Oriole agent",
          "agentType": "Full Service Agent",
          "description": "Alagbole Supermarket",
          "location": {
            "street": "123 Karaole Street",
            "city": "Ibadan",
            "state": "Oyo",
            "country": "NG",
            "geoLocation": {
              "latitude": 7.332014,
              "longitude": 3.86888
            }
          },
          "contactInfo": [
            {
              "description": "Agent email",
              "type": "email",
              "value": "alagbolesupermarket@example.com"
            },
            {
              "description": "Agent phone",
              "type": "phone",
              "value": "08012345678"
            }
          ],
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string"
          },
          "agentName": {
            "type": "string"
          },
          "agentType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/Location"
          },
          "contactInfo": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ContactInfo"
            }
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "agentId",
          "agentName",
          "agentType",
          "description",
          "location",
          "contactInfo",
          "expansionFields"
        ]
      },
      "GetaSpecificAgent-Success": {
        "title": "GetaSpecificAgent-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "agentId": "0123",
              "agentName": "Alaba Oriole agent",
              "agentType": "Full Service Agent",
              "description": "Alagbole Supermarket",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "contactInfo": [
                {
                  "description": "Agent email",
                  "type": "email",
                  "value": "alagbolesupermarket@example.com"
                },
                {
                  "description": "Agent phone",
                  "type": "phone",
                  "value": "08012345678"
                }
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data9"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetAgentsbyLocation-Success": {
        "title": "GetAgentsbyLocation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "agentId": "0123",
              "agentName": "Alaba Oriole agent",
              "agentType": "Full Service Agent",
              "description": "Alagbole Supermarket",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              },
              "contactInfo": [
                {
                  "description": "Agent email",
                  "type": "email",
                  "value": "alagbolesupermarket@example.com"
                },
                {
                  "description": "Agent phone",
                  "type": "phone",
                  "value": "08012345678"
                }
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data9"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetPOSbyTerminalId": {
        "title": "GetPOSbyTerminalId",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "terminalId": "AB123456",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data12"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data12": {
        "title": "GetPOSbyTerminalId",
        "example": {
          "terminalId": "AB123456",
          "merchantId": "20123456",
          "merchantName": "Karaole Supermarket",
          "email": "merchant@example.com",
          "phone": "09091234567",
          "dateDeployed": "2017-12-23",
          "currency": "NGN",
          "terminalType": "Pax 90",
          "ptsa": "Datalex Datapro",
          "ptsp": "Super PTSP",
          "status": "Active",
          "location": {
            "street": "123 Karaole Street",
            "city": "Ibadan",
            "state": "Oyo",
            "country": "NG",
            "geoLocation": {
              "latitude": 7.332014,
              "longitude": 3.86888
            }
          }
        },
        "type": "object",
        "properties": {
          "terminalId": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "merchantName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "dateDeployed": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "terminalType": {
            "type": "string"
          },
          "ptsa": {
            "type": "string"
          },
          "ptsp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/Location"
          }
        },
        "required": [
          "terminalId",
          "merchantId",
          "merchantName",
          "email",
          "phone",
          "dateDeployed",
          "currency",
          "terminalType",
          "ptsa",
          "ptsp",
          "status",
          "location"
        ]
      },
      "GetPOSByMerchantId-Success": {
        "title": "GetPOSByMerchantId-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "terminalId": "AB123456",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            },
            {
              "terminalId": "AB654321",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data12"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetPOSByBranchId-Success": {
        "title": "GetPOSByBranchId-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "terminalId": "AB123456",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            },
            {
              "terminalId": "AB654321",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data12"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetPOSbyLocation-Success": {
        "title": "GetPOSbyLocation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "terminalId": "AB123456",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            },
            {
              "terminalId": "AB654321",
              "merchantId": "20123456",
              "merchantName": "Karaole Supermarket",
              "email": "merchant@example.com",
              "phone": "09091234567",
              "dateDeployed": "2017-12-23",
              "currency": "NGN",
              "terminalType": "Pax 90",
              "ptsa": "Datalex Datapro",
              "ptsp": "Super PTSP",
              "status": "Active",
              "location": {
                "street": "123 Karaole Street",
                "city": "Ibadan",
                "state": "Oyo",
                "country": "NG",
                "geoLocation": {
                  "latitude": 7.332014,
                  "longitude": 3.86888
                }
              }
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data12"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetCustomerbyCustomerID-Success": {
        "title": "GetCustomerbyCustomerID-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "customerID": "1234567890",
            "customerName": {
              "firstName": "Ado",
              "lastName": "John",
              "otherNames": "Sule"
            },
            "bvn": "22112345678",
            "dateOfBirth": "01/12/1990",
            "email": "ado.john@example.com",
            "phone": "09034567890",
            "numberOfAccounts": 1,
            "type": "Individual",
            "startDateOfRelationship": "02/03/2011",
            "status": "Active",
            "customerAddress": {
              "street": "21, Orimolade Crescent, Adeniyi Jones",
              "city": "Ikeja",
              "state": "Lagos",
              "country": "NG",
              "postalCode": "101234"
            },
            "identity": {
              "idNumber": "A123456789",
              "idType": "Passport",
              "countryOfIssue": "Nigeria",
              "expiryDate": "23/12/2025"
            },
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data16"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data16": {
        "title": "GetCustomerbyCustomerID-Success",
        "example": {
          "customerID": "1234567890",
          "customerName": {
            "firstName": "Ado",
            "lastName": "John",
            "otherNames": "Sule"
          },
          "bvn": "22112345678",
          "dateOfBirth": "01/12/1990",
          "email": "ado.john@example.com",
          "phone": "09034567890",
          "numberOfAccounts": 1,
          "type": "Individual",
          "startDateOfRelationship": "02/03/2011",
          "status": "Active",
          "customerAddress": {
            "street": "21, Orimolade Crescent, Adeniyi Jones",
            "city": "Ikeja",
            "state": "Lagos",
            "country": "NG",
            "postalCode": "101234"
          },
          "identity": {
            "idNumber": "A123456789",
            "idType": "Passport",
            "countryOfIssue": "Nigeria",
            "expiryDate": "23/12/2025"
          },
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "customerID": {
            "type": "string"
          },
          "customerName": {
            "$ref": "#/definitions/CustomerName"
          },
          "bvn": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "numberOfAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "startDateOfRelationship": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "customerAddress": {
            "$ref": "#/definitions/CustomerAddress"
          },
          "identity": {
            "$ref": "#/definitions/Identity"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "customerID",
          "customerName",
          "bvn",
          "dateOfBirth",
          "email",
          "phone",
          "numberOfAccounts",
          "type",
          "startDateOfRelationship",
          "status",
          "customerAddress",
          "identity",
          "expansionFields"
        ]
      },
      "CustomerName": {
        "title": "CustomerName",
        "example": {
          "firstName": "Ado",
          "lastName": "John",
          "otherNames": "Sule"
        },
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "otherNames": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "otherNames"
        ]
      },
      "CustomerAddress": {
        "title": "CustomerAddress",
        "example": {
          "street": "21, Orimolade Crescent, Adeniyi Jones",
          "city": "Ikeja",
          "state": "Lagos",
          "country": "NG",
          "postalCode": "101234"
        },
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        },
        "required": [
          "street",
          "city",
          "state",
          "country",
          "postalCode"
        ]
      },
      "Identity": {
        "title": "Identity",
        "example": {
          "idNumber": "A123456789",
          "idType": "Passport",
          "countryOfIssue": "Nigeria",
          "expiryDate": "23/12/2025"
        },
        "type": "object",
        "properties": {
          "idNumber": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "countryOfIssue": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          }
        },
        "required": [
          "idNumber",
          "idType",
          "countryOfIssue",
          "expiryDate"
        ]
      },
      "GetCustomerbyBVN-Success": {
        "title": "GetCustomerbyBVN-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "customerID": "1234567890",
            "customerName": {
              "firstName": "Ado",
              "lastName": "John",
              "otherNames": "Sule"
            },
            "bvn": "22112345678",
            "dateOfBirth": "01/12/1990",
            "email": "ado.john@example.com",
            "phone": "09034567890",
            "numberOfAccounts": 1,
            "type": "Individual",
            "startDateOfRelationship": "02/03/2011",
            "status": "Active",
            "customerAddress": {
              "street": "21, Orimolade Crescent, Adeniyi Jones",
              "city": "Ikeja",
              "state": "Lagos",
              "country": "NG",
              "postalCode": "101234"
            },
            "identity": {
              "idNumber": "A123456789",
              "idType": "Passport",
              "countryOfIssue": "Nigeria",
              "expiryDate": "23/12/2025"
            },
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data16"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "CustomerFeedbackRequest": {
        "title": "CustomerFeedbackRequest",
        "example": {
          "reportingReference": "0091234",
          "customerId": "0091234",
          "accountNumber": "5050099234",
          "BVN": "22142212345",
          "phoneNumber": "08021234567",
          "email": "customer.name@example.com",
          "feedbackCategory": "Bill Payment",
          "feedDescription": "Ubable to complete payment"
        },
        "type": "object",
        "properties": {
          "reportingReference": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "BVN": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "feedbackCategory": {
            "type": "string"
          },
          "feedDescription": {
            "type": "string"
          }
        },
        "required": [
          "reportingReference",
          "customerId",
          "accountNumber",
          "BVN",
          "phoneNumber",
          "email",
          "feedbackCategory",
          "feedDescription"
        ]
      },
      "ReportaFraud-Success": {
        "title": "ReportaFraud-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "reportingReference": "0091234",
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data18"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data18": {
        "title": "ReportaFraud-Success",
        "example": {
          "reportingReference": "0091234",
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "reportingReference": {
            "type": "string"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "reportingReference",
          "expansionFields"
        ]
      },
      "GetAllAccounts(SingleAccount)": {
        "title": "GetAllAccounts(SingleAccount)",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "accountNumber": "1010119934",
              "customerId": "1234567890",
              "accountName": "Ado John Sule",
              "currency": "NGN",
              "accountOpeningDate": "2017-01-13",
              "lastTransactionDate": "2019-03-15T07:05:59.524Z",
              "accountType": "Wonderful Savings Account",
              "bvn": "221422456789",
              "fullName": "Ado John Sule",
              "phoneNumber": "09091234567",
              "email": "ado.john@example.com",
              "status": "Active",
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data19"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data19": {
        "title": "GetAllAccounts(SingleAccount)",
        "example": {
          "accountNumber": "1010119934",
          "customerId": "1234567890",
          "accountName": "Ado John Sule",
          "currency": "NGN",
          "accountOpeningDate": "2017-01-13",
          "lastTransactionDate": "2019-03-15T07:05:59.524Z",
          "accountType": "Wonderful Savings Account",
          "bvn": "221422456789",
          "fullName": "Ado John Sule",
          "phoneNumber": "09091234567",
          "email": "ado.john@example.com",
          "status": "Active",
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "accountOpeningDate": {
            "type": "string"
          },
          "lastTransactionDate": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "bvn": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "accountNumber",
          "customerId",
          "accountName",
          "currency",
          "accountOpeningDate",
          "lastTransactionDate",
          "accountType",
          "bvn",
          "fullName",
          "phoneNumber",
          "email",
          "status",
          "expansionFields"
        ]
      },
      "GetSpecificAccount-Success": {
        "title": "GetSpecificAccount-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "accountNumber": "1010119934",
              "customerId": "1234567890",
              "accountName": "Ado John Sule",
              "currency": "NGN",
              "accountOpeningDate": "2017-01-13",
              "lastTransactionDate": "2019-03-15T07:05:59.524Z",
              "accountType": "Wonderful Savings Account",
              "bvn": "221422456789",
              "fullName": "Ado John Sule",
              "phoneNumber": "09091234567",
              "email": "ado.john@example.com",
              "status": "Active",
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data19"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "GetAccountBalance": {
        "title": "GetAccountBalance",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "accountNumber": "0123456789",
            "currency": "NGN",
            "decimal": 0,
            "availableBalance": 800000,
            "clearedBalance": 1000000,
            "unclearedBalance": 0,
            "holdBalance": 100000,
            "minimumBalance": 100000,
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data21"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data21": {
        "title": "AllAccountsandProductType-Success",
        "example": {
          "accountNumber": "0123456789",
          "currency": "NGN",
          "decimal": 0,
          "availableBalance": 800000,
          "clearedBalance": 1000000,
          "unclearedBalance": 0,
          "holdBalance": 100000,
          "minimumBalance": 100000,
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "decimal": {
            "type": "integer",
            "format": "int32"
          },
          "availableBalance": {
            "type": "integer",
            "format": "int32"
          },
          "clearedBalance": {
            "type": "integer",
            "format": "int32"
          },
          "unclearedBalance": {
            "type": "integer",
            "format": "int32"
          },
          "holdBalance": {
            "type": "integer",
            "format": "int32"
          },
          "minimumBalance": {
            "type": "integer",
            "format": "int32"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "accountNumber",
          "currency",
          "decimal",
          "availableBalance",
          "clearedBalance",
          "unclearedBalance",
          "holdBalance",
          "minimumBalance",
          "expansionFields"
        ]
      },
      "AllAccountsandProductType-Success": {
        "title": "AllAccountsandProductType-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "accountTypeId": "SBA123",
              "accountTypeName": "SANEF Savings Accounts",
              "minimumBalance": 100000,
              "maximumBalance": 100000000,
              "maximumOutflowLimit": 10000000,
              "maximumInFlowLimit": 25000000,
              "currency": "NGN",
              "decimal": 0,
              "kycLevel": 2,
              "documentationRequired": [
                {
                  "type": "id",
                  "description": "Proof of identity",
                  "value": "Passport photograph"
                }
              ],
              "digitalServices": [
                {
                  "service": "USSD",
                  "description": "ABC Super Banking",
                  "available": true
                },
                {
                  "service": "mobile",
                  "description": "ABC Mobile Banking",
                  "available": false
                }
              ],
              "cardProducts": [
                {
                  "id": "MC",
                  "description": "Mastercard",
                  "available": true
                },
                {
                  "id": "VS",
                  "description": "Visa",
                  "available": false
                },
                {
                  "id": "VR",
                  "description": "Verve",
                  "available": true
                }
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            },
            {
              "accountTypeId": "ODA456",
              "accountTypeName": "Excellent Current Account",
              "minimumBalance": 0,
              "maximumBalance": 999999999999999,
              "maximumOutflowLimit": 9999999999,
              "maximumInFlowLimit": 9999999999,
              "currency": "NGN",
              "decimal": 0,
              "kycLevel": 2,
              "documentationRequired": [
                {
                  "type": "id",
                  "description": "Proof of identity",
                  "value": "Passport photograph"
                },
                {
                  "type": "ref",
                  "description": "Reference",
                  "value": "Reference Letter"
                }
              ],
              "digitalServices": [
                {
                  "service": "USSD",
                  "description": "ABC Super Banking",
                  "available": true
                },
                {
                  "service": "mobile",
                  "description": "ABC Mobile Banking",
                  "available": false
                }
              ],
              "cardProducts": [
                {
                  "id": "MC",
                  "description": "Mastercard",
                  "available": true
                },
                {
                  "id": "VS",
                  "description": "Visa",
                  "available": false
                },
                {
                  "id": "VR",
                  "description": "Verve",
                  "available": true
                }
              ],
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data22"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data22": {
        "title": "AllAccountsandProductType-Success",
        "example": {
          "accountTypeId": "SBA123",
          "accountTypeName": "SANEF Savings Accounts",
          "minimumBalance": 100000,
          "maximumBalance": 100000000,
          "maximumOutflowLimit": 10000000,
          "maximumInFlowLimit": 25000000,
          "currency": "NGN",
          "decimal": 0,
          "kycLevel": 2,
          "documentationRequired": [
            {
              "type": "id",
              "description": "Proof of identity",
              "value": "Passport photograph"
            }
          ],
          "digitalServices": [
            {
              "service": "USSD",
              "description": "ABC Super Banking",
              "available": true
            },
            {
              "service": "mobile",
              "description": "ABC Mobile Banking",
              "available": false
            }
          ],
          "cardProducts": [
            {
              "id": "MC",
              "description": "Mastercard",
              "available": true
            },
            {
              "id": "VS",
              "description": "Visa",
              "available": false
            },
            {
              "id": "VR",
              "description": "Verve",
              "available": true
            }
          ],
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "accountTypeId": {
            "type": "string"
          },
          "accountTypeName": {
            "type": "string"
          },
          "minimumBalance": {
            "type": "integer",
            "format": "int32"
          },
          "maximumBalance": {
            "type": "integer",
            "format": "int32"
          },
          "maximumOutflowLimit": {
            "type": "integer",
            "format": "int32"
          },
          "maximumInFlowLimit": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "decimal": {
            "type": "integer",
            "format": "int32"
          },
          "kycLevel": {
            "type": "integer",
            "format": "int32"
          },
          "documentationRequired": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DocumentationRequired"
            }
          },
          "digitalServices": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DigitalService"
            }
          },
          "cardProducts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CardProduct"
            }
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "accountTypeId",
          "accountTypeName",
          "minimumBalance",
          "maximumBalance",
          "maximumOutflowLimit",
          "maximumInFlowLimit",
          "currency",
          "decimal",
          "kycLevel",
          "documentationRequired",
          "digitalServices",
          "cardProducts",
          "expansionFields"
        ]
      },
      "DocumentationRequired": {
        "title": "DocumentationRequired",
        "example": {
          "type": "id",
          "description": "Proof of identity",
          "value": "Passport photograph"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "description",
          "value"
        ]
      },
      "DigitalService": {
        "title": "DigitalService",
        "example": {
          "service": "USSD",
          "description": "ABC Super Banking",
          "available": true
        },
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          }
        },
        "required": [
          "service",
          "description",
          "available"
        ]
      },
      "CardProduct": {
        "title": "CardProduct",
        "example": {
          "id": "MC",
          "description": "Mastercard",
          "available": true
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "description",
          "available"
        ]
      },
      "GetAccountsandProductTypes": {
        "title": "GetAccountsandProductTypes",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "accountTypeId": "SBA123",
            "accountTypeName": "SANEF Savings Accounts",
            "minimumBalance": 100000,
            "maximumBalance": 100000000,
            "maximumOutFlowLimit": 10000000,
            "maximumInFlowLimit": 25000000,
            "currency": "NGN",
            "decimal": 0,
            "kycLevel": 2,
            "documentationRequired": [
              {
                "type": "id",
                "description": "Proof of identity",
                "value": "Passport photograph"
              }
            ],
            "digitalServices": [
              {
                "service": "USSD",
                "description": "ABC Super Banking",
                "available": true
              },
              {
                "service": "mobile",
                "description": "ABC Mobile Banking",
                "available": false
              }
            ],
            "cardProducts": [
              {
                "id": "MC",
                "description": "Mastercard",
                "available": true
              },
              {
                "id": "VS",
                "description": "Visa",
                "available": false
              },
              {
                "id": "VR",
                "description": "Verve",
                "available": true
              }
            ],
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data23"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data23": {
        "title": "GetAccountsandProductTypes",
        "example": {
          "accountTypeId": "SBA123",
          "accountTypeName": "SANEF Savings Accounts",
          "minimumBalance": 100000,
          "maximumBalance": 100000000,
          "maximumOutFlowLimit": 10000000,
          "maximumInFlowLimit": 25000000,
          "currency": "NGN",
          "decimal": 0,
          "kycLevel": 2,
          "documentationRequired": [
            {
              "type": "id",
              "description": "Proof of identity",
              "value": "Passport photograph"
            }
          ],
          "digitalServices": [
            {
              "service": "USSD",
              "description": "ABC Super Banking",
              "available": true
            },
            {
              "service": "mobile",
              "description": "ABC Mobile Banking",
              "available": false
            }
          ],
          "cardProducts": [
            {
              "id": "MC",
              "description": "Mastercard",
              "available": true
            },
            {
              "id": "VS",
              "description": "Visa",
              "available": false
            },
            {
              "id": "VR",
              "description": "Verve",
              "available": true
            }
          ],
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "accountTypeId": {
            "type": "string"
          },
          "accountTypeName": {
            "type": "string"
          },
          "minimumBalance": {
            "type": "integer",
            "format": "int32"
          },
          "maximumBalance": {
            "type": "integer",
            "format": "int32"
          },
          "maximumOutFlowLimit": {
            "type": "integer",
            "format": "int32"
          },
          "maximumInFlowLimit": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "decimal": {
            "type": "integer",
            "format": "int32"
          },
          "kycLevel": {
            "type": "integer",
            "format": "int32"
          },
          "documentationRequired": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DocumentationRequired"
            }
          },
          "digitalServices": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DigitalService"
            }
          },
          "cardProducts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CardProduct"
            }
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "accountTypeId",
          "accountTypeName",
          "minimumBalance",
          "maximumBalance",
          "maximumOutFlowLimit",
          "maximumInFlowLimit",
          "currency",
          "decimal",
          "kycLevel",
          "documentationRequired",
          "digitalServices",
          "cardProducts",
          "expansionFields"
        ]
      },
      "OpenAccountRequest": {
        "title": "OpenAccountRequest",
        "example": {
          "requestId": "SUPERAGENT0013456",
          "accountTypeId": "SBA123",
          "firstName": "Ado",
          "otherName": "John",
          "surname": "Sule",
          "salutation": "Mr.",
          "gender": "Male",
          "dateOfBirth": "1990-09-30",
          "bvn": "22112345678",
          "street": "456 Johnson Street",
          "city": "Ilesa",
          "localGovernment": "Ilesa West",
          "country": "NGN",
          "nationality": "NGN",
          "customerId": "string",
          "phone": "string",
          "email": "adojohn@example.com",
          "nextOfKin": {
            "name": "Ada Joanne Sule",
            "gender": "Female",
            "street": "456 Somewhere",
            "city": "Ado Ekiti",
            "state": "Ekiti State",
            "country": "NG",
            "email": "adajoanne@example.com",
            "phone": "+2347031234567",
            "relationship": "Sibling"
          },
          "linkedCard": {
            "type": "MC",
            "description": "Mastercard",
            "serial": "MC123445678XXG"
          },
          "agency": {
            "superAgent": "SANEF Super Agent",
            "agentId": "agent1234",
            "agentName": "Uncle Tayo Supermarket",
            "agentPhone": "+234 803 405 6789",
            "agentAddress": "Somewhere in  Kaura Namoda, Zamfara State",
            "longitue": 1234456.78,
            "latitude": 4567890.99
          }
        },
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "accountTypeId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "otherName": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "bvn": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "localGovernment": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "nextOfKin": {
            "$ref": "#/definitions/NextOfKin"
          },
          "linkedCard": {
            "$ref": "#/definitions/LinkedCard"
          },
          "agency": {
            "$ref": "#/definitions/Agency"
          }
        },
        "required": [
          "requestId",
          "accountTypeId",
          "firstName",
          "otherName",
          "surname",
          "salutation",
          "gender",
          "dateOfBirth",
          "bvn",
          "street",
          "city",
          "localGovernment",
          "country",
          "nationality",
          "customerId",
          "phone",
          "email",
          "nextOfKin",
          "linkedCard",
          "agency"
        ]
      },
      "NextOfKin": {
        "title": "NextOfKin",
        "example": {
          "name": "Ada Joanne Sule",
          "gender": "Female",
          "street": "456 Somewhere",
          "city": "Ado Ekiti",
          "state": "Ekiti State",
          "country": "NG",
          "email": "adajoanne@example.com",
          "phone": "+2347031234567",
          "relationship": "Sibling"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "gender",
          "street",
          "city",
          "state",
          "country",
          "email",
          "phone",
          "relationship"
        ]
      },
      "LinkedCard": {
        "title": "LinkedCard",
        "example": {
          "type": "MC",
          "description": "Mastercard",
          "serial": "MC123445678XXG"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "serial": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "description",
          "serial"
        ]
      },
      "Agency": {
        "title": "Agency",
        "example": {
          "superAgent": "SANEF Super Agent",
          "agentId": "agent1234",
          "agentName": "Uncle Tayo Supermarket",
          "agentPhone": "+234 803 405 6789",
          "agentAddress": "Somewhere in  Kaura Namoda, Zamfara State",
          "longitue": 1234456.78,
          "latitude": 4567890.99
        },
        "type": "object",
        "properties": {
          "superAgent": {
            "type": "string"
          },
          "agentId": {
            "type": "string"
          },
          "agentName": {
            "type": "string"
          },
          "agentPhone": {
            "type": "string"
          },
          "agentAddress": {
            "type": "string"
          },
          "longitue": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "superAgent",
          "agentId",
          "agentName",
          "agentPhone",
          "agentAddress",
          "longitue",
          "latitude"
        ]
      },
      "AccountOpening": {
        "title": "AccountOpening",
        "example": {
          "status": "successful",
          "message": "Request process successfully",
          "data": {
            "requestId": "SUPERAGENT0013456",
            "accountNumber": "0123456784",
            "customerId": "CI12345678",
            "accountOpeningDate": "2018-09-04 17:45:55",
            "Process": "Batch",
            "processCode": "00",
            "processMessage": "Account opened successfully"
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data24"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data24": {
        "title": "AccountOpening",
        "example": {
          "requestId": "SUPERAGENT0013456",
          "accountNumber": "0123456784",
          "customerId": "CI12345678",
          "accountOpeningDate": "2018-09-04 17:45:55",
          "Process": "Batch",
          "processCode": "00",
          "processMessage": "Account opened successfully"
        },
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "accountOpeningDate": {
            "type": "string"
          },
          "Process": {
            "type": "string"
          },
          "processCode": {
            "type": "string"
          },
          "processMessage": {
            "type": "string"
          }
        },
        "required": [
          "requestId",
          "accountNumber",
          "customerId",
          "accountOpeningDate",
          "Process",
          "processCode",
          "processMessage"
        ]
      },
      "GetStatementSuccess": {
        "title": "GetStatementSuccess",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "transactions": [
              {
                "accountNumber": "1234567890",
                "amount": 1000,
                "currency": "NGN",
                "channel": "ATM",
                "debitOrCredit": "DR",
                "narration": "ATM Withdrawal/Karaole LANG",
                "referenceId": "WDS12345678909987",
                "transactionTime": "2019-01-02T19:58:47.1234567",
                "transactionType": "ATM Withdrawal",
                "valueDate": "2019-01-02",
                "balanceAfter": 1200,
                "expansionFields": [
                  {
                    "id": "Some random ID",
                    "description": "Some random text",
                    "type": "Some random type",
                    "value": "Some value"
                  }
                ]
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data25"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data25": {
        "title": "GetStatementSuccess",
        "example": {
          "transactions": [
            {
              "accountNumber": "1234567890",
              "amount": 1000,
              "currency": "NGN",
              "channel": "ATM",
              "debitOrCredit": "DR",
              "narration": "ATM Withdrawal/Karaole LANG",
              "referenceId": "WDS12345678909987",
              "transactionTime": "2019-01-02T19:58:47.1234567",
              "transactionType": "ATM Withdrawal",
              "valueDate": "2019-01-02",
              "balanceAfter": 1200,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "required": [
          "transactions"
        ]
      },
      "Transaction": {
        "title": "Transaction",
        "example": {
          "accountNumber": "1234567890",
          "amount": 1000,
          "currency": "NGN",
          "channel": "ATM",
          "debitOrCredit": "DR",
          "narration": "ATM Withdrawal/Karaole LANG",
          "referenceId": "WDS12345678909987",
          "transactionTime": "2019-01-02T19:58:47.1234567",
          "transactionType": "ATM Withdrawal",
          "valueDate": "2019-01-02",
          "balanceAfter": 1200,
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "debitOrCredit": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "transactionTime": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "valueDate": {
            "type": "string"
          },
          "balanceAfter": {
            "type": "integer",
            "format": "int32"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "accountNumber",
          "amount",
          "currency",
          "channel",
          "debitOrCredit",
          "narration",
          "referenceId",
          "transactionTime",
          "transactionType",
          "valueDate",
          "balanceAfter",
          "expansionFields"
        ]
      },
      "GetStatementSuccess1": {
        "title": "GetStatementSuccess",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "accountNumber": "1234567890",
              "amount": 1000,
              "currency": "NGN",
              "channel": "ATM",
              "debitOrCredit": "DR",
              "narration": "ATM Withdrawal/Karaole LANG",
              "referenceId": "WDS12345678909987",
              "transactionTime": "2019-01-02T19:58:47.1234567",
              "transactionType": "ATM Withdrawal",
              "valueDate": "2019-01-02",
              "balanceAfter": 1200,
              "expansionFields": [
                {
                  "id": "Some random ID",
                  "description": "Some random text",
                  "type": "Some random type",
                  "value": "Some value"
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data26"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data26": {
        "title": "GetStatementSuccess",
        "example": {
          "accountNumber": "1234567890",
          "amount": 1000,
          "currency": "NGN",
          "channel": "ATM",
          "debitOrCredit": "DR",
          "narration": "ATM Withdrawal/Karaole LANG",
          "referenceId": "WDS12345678909987",
          "transactionTime": "2019-01-02T19:58:47.1234567",
          "transactionType": "ATM Withdrawal",
          "valueDate": "2019-01-02",
          "balanceAfter": 1200,
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "debitOrCredit": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "transactionTime": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "valueDate": {
            "type": "string"
          },
          "balanceAfter": {
            "type": "integer",
            "format": "int32"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "accountNumber",
          "amount",
          "currency",
          "channel",
          "debitOrCredit",
          "narration",
          "referenceId",
          "transactionTime",
          "transactionType",
          "valueDate",
          "balanceAfter",
          "expansionFields"
        ]
      },
      "SingleTransferwithinBankRequest": {
        "title": "SingleTransferwithinBankRequest",
        "example": {
          "amount": 0,
          "channel": "string",
          "currency": "NGN",
          "destinationAccount": "0123456789",
          "destinationAccountName": "Ado John Sule",
          "destinationNarration": "A sample transfer",
          "endDate": "2018-12-13T15:59:33.516Z",
          "referenceId": "ABCD12345678901234567890",
          "sourceAccount": "9876543210",
          "sourceAccountName": "Solomon Grundy",
          "sourceAmount": "10000",
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to Ado",
          "startDate": "2018-12-13T15:59:33.516Z",
          "transactionDate": "2018-12-13T15:59:33.516Z",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/"
        },
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "destinationAccount": {
            "type": "string"
          },
          "destinationAccountName": {
            "type": "string"
          },
          "destinationNarration": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "sourceAmount": {
            "type": "string"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "channel",
          "currency",
          "destinationAccount",
          "destinationAccountName",
          "destinationNarration",
          "endDate",
          "referenceId",
          "sourceAccount",
          "sourceAccountName",
          "sourceAmount",
          "sourceCurrency",
          "sourceNarration",
          "startDate",
          "transactionDate",
          "statusWebHook"
        ]
      },
      "Single-TransferwithinBank-Success": {
        "title": "Single-TransferwithinBank-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "errors": null,
            "error": null,
            "transactionRef": "0000000000",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "statusWebHook": 0,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data27"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data27": {
        "title": "Single-TransferwithinBank-Success",
        "example": {
          "errors": null,
          "error": null,
          "transactionRef": "0000000000",
          "validTill": "yyyyMMddhhttss",
          "expiryMinutes": 9,
          "statusWebHook": 0,
          "authDetails": [
            {
              "type": "otp",
              "label": "6-digit OTP",
              "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
            },
            {
              "type": "password",
              "label": "internet banking password",
              "Message": "Kindly enter your internet banking password"
            }
          ]
        },
        "type": "object",
        "properties": {
          "errors": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          },
          "validTill": {
            "type": "string"
          },
          "expiryMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "statusWebHook": {
            "type": "integer",
            "format": "int32"
          },
          "authDetails": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuthDetail"
            }
          }
        },
        "required": [
          "errors",
          "error",
          "transactionRef",
          "validTill",
          "expiryMinutes",
          "statusWebHook",
          "authDetails"
        ]
      },
      "AuthDetail": {
        "title": "AuthDetail",
        "example": {
          "type": "otp",
          "label": "6-digit OTP",
          "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "label",
          "Message"
        ]
      },
      "NameEnquiryRequest": {
        "title": "NameEnquiryRequest",
        "example": {
          "accountNumber": "0123456789"
        },
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          }
        },
        "required": [
          "accountNumber"
        ]
      },
      "NameEnquiry-Success": {
        "title": "NameEnquiry-Success",
        "example": {
          "responsecode": "00",
          "status": "Successful",
          "message": "",
          "data": {
            "accountNumber": 2222000000012345,
            "accountName": "John Doe",
            "bvn": 25658545854
          }
        },
        "type": "object",
        "properties": {
          "responsecode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data28"
          }
        },
        "required": [
          "responsecode",
          "status",
          "message",
          "data"
        ]
      },
      "Data28": {
        "title": "NameEnquiry-Success",
        "example": {
          "accountNumber": 2222000000012345,
          "accountName": "John Doe",
          "bvn": 25658545854
        },
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "integer",
            "format": "int64"
          },
          "accountName": {
            "type": "string"
          },
          "bvn": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "accountNumber",
          "accountName",
          "bvn"
        ]
      },
      "SingleTransfertoAnotherBankRequest": {
        "title": "SingleTransfertoAnotherBankRequest",
        "example": {
          "amount": 0,
          "channel": "string",
          "currency": "NGN",
          "destinationAccount": "0123456789",
          "destinationBankCode": "000111",
          "destinationBankName": "ABC National Bank Plc.",
          "destinationAccountName": "Ado John Sule",
          "destinationNarration": "A sample transfer",
          "endDate": "2018-12-13T15:59:33.516Z",
          "referenceId": "ABCD12345678901234567890",
          "sourceAccount": "9876543210",
          "sourceAccountName": "Solomon Grundy",
          "sourceAmount": "10000",
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to Ado",
          "startDate": "2018-12-13T15:59:33.516Z",
          "transactionDate": "2018-12-13T15:59:33.516Z",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/"
        },
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "destinationAccount": {
            "type": "string"
          },
          "destinationBankCode": {
            "type": "string"
          },
          "destinationBankName": {
            "type": "string"
          },
          "destinationAccountName": {
            "type": "string"
          },
          "destinationNarration": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "sourceAmount": {
            "type": "string"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "channel",
          "currency",
          "destinationAccount",
          "destinationBankCode",
          "destinationBankName",
          "destinationAccountName",
          "destinationNarration",
          "endDate",
          "referenceId",
          "sourceAccount",
          "sourceAccountName",
          "sourceAmount",
          "sourceCurrency",
          "sourceNarration",
          "startDate",
          "transactionDate",
          "statusWebHook"
        ]
      },
      "SIngleTransfertoAnotherBank-Success": {
        "title": "SIngleTransfertoAnotherBank-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "errors": null,
            "error": null,
            "transactionRef": "0000000000",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "statusWebHook": 0,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data27"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Transactionconfirmation-Success": {
        "title": "Transactionconfirmation-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "status": "A random status message ",
            "statusCode": "01234"
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data30"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data30": {
        "title": "Transactionconfirmation-Success",
        "example": {
          "status": "A random status message ",
          "statusCode": "01234"
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "statusCode"
        ]
      },
      "TransactioncompletionRequest": {
        "title": "TransactioncompletionRequest",
        "example": {
          "requesRef": "0000000000",
          "transactionRef": "0000000000",
          "authDetails": [
            {
              "type": "otp",
              "value": "THE VALUE"
            },
            {
              "type": "password",
              "value": "THE VALUE"
            }
          ]
        },
        "type": "object",
        "properties": {
          "requesRef": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          },
          "authDetails": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuthDetail2"
            }
          }
        },
        "required": [
          "requesRef",
          "transactionRef",
          "authDetails"
        ]
      },
      "AuthDetail2": {
        "title": "AuthDetail2",
        "example": {
          "type": "otp",
          "value": "THE VALUE"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "TransactionCompletion-Success": {
        "title": "TransactionCompletion-Success",
        "example": {
          "status": "00",
          "message": "procesed successfully",
          "data": {
            "error": null,
            "reuseToken": {
              "token": "iuiu886ii",
              "validTill": "yyyyMMddhhttss"
            }
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data31"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data31": {
        "title": "TransactionCompletion-Success",
        "example": {
          "error": null,
          "reuseToken": {
            "token": "iuiu886ii",
            "validTill": "yyyyMMddhhttss"
          }
        },
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "reuseToken": {
            "$ref": "#/definitions/ReuseToken"
          }
        },
        "required": [
          "error",
          "reuseToken"
        ]
      },
      "ReuseToken": {
        "title": "ReuseToken",
        "example": {
          "token": "iuiu886ii",
          "validTill": "yyyyMMddhhttss"
        },
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "validTill": {
            "type": "string"
          }
        },
        "required": [
          "token",
          "validTill"
        ]
      },
      "HoldFundRequest": {
        "title": "HoldFundRequest",
        "example": {
          "referenceId": "ABCD12345678901234567890",
          "accountNumber": "9876543210",
          "amount": "10000",
          "currency": "NGN",
          "narration": "Hold fund narration",
          "startHoldDate": "2018-12-01T15:59:33.516Z",
          "endHoldDate": "2018-12-31T15:59:33.516Z",
          "transactionDate": "2018-12-13T15:59:33.516Z"
        },
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "startHoldDate": {
            "type": "string"
          },
          "endHoldDate": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          }
        },
        "required": [
          "referenceId",
          "accountNumber",
          "amount",
          "currency",
          "narration",
          "startHoldDate",
          "endHoldDate",
          "transactionDate"
        ]
      },
      "HoldFund-Success": {
        "title": "HoldFund-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "errors": null,
            "error": null,
            "transactionRef": "XYZ12345678901234567890",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data32"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data32": {
        "title": "HoldFund-Success",
        "example": {
          "errors": null,
          "error": null,
          "transactionRef": "XYZ12345678901234567890",
          "validTill": "yyyyMMddhhttss",
          "expiryMinutes": 9,
          "authDetails": [
            {
              "type": "otp",
              "label": "6-digit OTP",
              "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
            },
            {
              "type": "password",
              "label": "internet banking password",
              "Message": "Kindly enter your internet banking password"
            }
          ]
        },
        "type": "object",
        "properties": {
          "errors": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          },
          "validTill": {
            "type": "string"
          },
          "expiryMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "authDetails": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuthDetail"
            }
          }
        },
        "required": [
          "errors",
          "error",
          "transactionRef",
          "validTill",
          "expiryMinutes",
          "authDetails"
        ]
      },
      "ReleaseFundRequest": {
        "title": "ReleaseFundRequest",
        "example": {
          "referenceId": "ABCD12345678901234567890",
          "accountNumber": "9876543210",
          "amount": "5000",
          "currency": "NGN",
          "releaseHoldDate": "2018-12-31T15:59:33.516Z",
          "transactionDate": "2018-12-13T15:59:33.516Z"
        },
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "releaseHoldDate": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          }
        },
        "required": [
          "referenceId",
          "accountNumber",
          "amount",
          "currency",
          "releaseHoldDate",
          "transactionDate"
        ]
      },
      "ReleaseFund-Success": {
        "title": "ReleaseFund-Success",
        "example": {
          "status": "00",
          "data": {
            "errors": null,
            "error": null,
            "transactionRef": "XYZ12345678901234567890"
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data33"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "Data33": {
        "title": "ReleaseFund-Success",
        "example": {
          "errors": null,
          "error": null,
          "transactionRef": "XYZ12345678901234567890"
        },
        "type": "object",
        "properties": {
          "errors": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          }
        },
        "required": [
          "errors",
          "error",
          "transactionRef"
        ]
      },
      "GetHeldFund-Success": {
        "title": "GetHeldFund-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "referenceId": "ABCD12345678901234567890",
            "accountNumber": "9876543210",
            "amount": "10000",
            "currency": "NGN",
            "narration": "Hold fund narration",
            "startHoldDate": "2018-12-01T15:59:33.516Z",
            "endHoldDate": "2018-12-31T15:59:33.516Z",
            "transactionDate": "2018-12-13T15:59:33.516Z"
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data34"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data34": {
        "title": "GetHeldFund-Success",
        "example": {
          "referenceId": "ABCD12345678901234567890",
          "accountNumber": "9876543210",
          "amount": "10000",
          "currency": "NGN",
          "narration": "Hold fund narration",
          "startHoldDate": "2018-12-01T15:59:33.516Z",
          "endHoldDate": "2018-12-31T15:59:33.516Z",
          "transactionDate": "2018-12-13T15:59:33.516Z"
        },
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "startHoldDate": {
            "type": "string"
          },
          "endHoldDate": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          }
        },
        "required": [
          "referenceId",
          "accountNumber",
          "amount",
          "currency",
          "narration",
          "startHoldDate",
          "endHoldDate",
          "transactionDate"
        ]
      },
      "MultipleTranserWithinBankRequest": {
        "title": "MultipleTranserWithinBankRequest",
        "example": {
          "batchId": "string",
          "channel": "string",
          "transactions": [
            {
              "destinationAccount": "55558855458",
              "destinationAccountName": "John Doe",
              "destinationBankCode": "4455",
              "destinationNarration": "A sample transfer"
            },
            {
              "destinationAccount": "55558855458",
              "destinationAccountName": "Selma Nikes",
              "destinationBankCode": "4455",
              "destinationNarration": "A sample transfer"
            }
          ],
          "referenceId": "5584848415",
          "sourceAccount": "50555551515",
          "sourceAccountName": "Solomon Grundy",
          "sourceAmount": "50000",
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to workers",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/"
        },
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Transaction1"
            }
          },
          "referenceId": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "sourceAmount": {
            "type": "string"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          }
        },
        "required": [
          "batchId",
          "channel",
          "transactions",
          "referenceId",
          "sourceAccount",
          "sourceAccountName",
          "sourceAmount",
          "sourceCurrency",
          "sourceNarration",
          "statusWebHook"
        ]
      },
      "Transaction1": {
        "title": "Transaction1",
        "example": {
          "destinationAccount": "55558855458",
          "destinationAccountName": "John Doe",
          "destinationBankCode": "4455",
          "destinationNarration": "A sample transfer"
        },
        "type": "object",
        "properties": {
          "destinationAccount": {
            "type": "string"
          },
          "destinationAccountName": {
            "type": "string"
          },
          "destinationBankCode": {
            "type": "string"
          },
          "destinationNarration": {
            "type": "string"
          }
        },
        "required": [
          "destinationAccount",
          "destinationAccountName",
          "destinationBankCode",
          "destinationNarration"
        ]
      },
      "MultipleTranserWithinBank-Success": {
        "title": "MultipleTranserWithinBank-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "errors": null,
            "error": null,
            "transactionRef": "0000000000",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "statusWebHook": 0,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data27"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "MultipleTransferToAnotherBankRequest": {
        "title": "MultipleTransferToAnotherBankRequest",
        "example": {
          "batchId": "string",
          "channel": "string",
          "transactions": [
            {
              "destinationAccount": "55558855458",
              "destinationAccountName": "John Doe",
              "destinationBankCode": "4455",
              "destinationNarration": "A sample transfer"
            },
            {
              "destinationAccount": "55558855458",
              "destinationAccountName": "Selma Nikes",
              "destinationBankCode": "4455",
              "destinationNarration": "A sample transfer"
            }
          ],
          "referenceId": "5584848415",
          "sourceAccount": "50555551515",
          "sourceAccountName": "Solomon Grundy",
          "sourceAmount": "50000",
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to workers",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/"
        },
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Transaction1"
            }
          },
          "referenceId": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "sourceAmount": {
            "type": "string"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          }
        },
        "required": [
          "batchId",
          "channel",
          "transactions",
          "referenceId",
          "sourceAccount",
          "sourceAccountName",
          "sourceAmount",
          "sourceCurrency",
          "sourceNarration",
          "statusWebHook"
        ]
      },
      "MultipleTransferToAnotherBank-Success": {
        "title": "MultipleTransferToAnotherBank-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "errors": null,
            "error": null,
            "transactionRef": "0000000000",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "statusWebHook": 0,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data27"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "CreateDirectDebitRequest": {
        "title": "CreateDirectDebitRequest",
        "example": {
          "referenceId": "ABCD12345678901234567890",
          "description": "Monthly Subscription for Super Movie",
          "sourceAccount": "9876543210",
          "sourceAccountName": "Solomon Grundy",
          "maximumAmount": 10000,
          "maximumTransactions": 10,
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to Ado",
          "startDate": "2018-12-13",
          "endDate": "2019-12-13",
          "frequency": "daily|weekly|monthly",
          "merchantCurrency": "NGN",
          "merchantAccount": "0123456789",
          "merchantAccountName": "Some Services Limited",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/"
        },
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "maximumAmount": {
            "type": "integer",
            "format": "int32"
          },
          "maximumTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "merchantCurrency": {
            "type": "string"
          },
          "merchantAccount": {
            "type": "string"
          },
          "merchantAccountName": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          }
        },
        "required": [
          "referenceId",
          "description",
          "sourceAccount",
          "sourceAccountName",
          "maximumAmount",
          "maximumTransactions",
          "sourceCurrency",
          "sourceNarration",
          "startDate",
          "endDate",
          "frequency",
          "merchantCurrency",
          "merchantAccount",
          "merchantAccountName",
          "statusWebHook"
        ]
      },
      "CreateDirectDebit-Success": {
        "title": "CreateDirectDebit-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "mandateStatus": "pending",
            "mandateID": "MAN1234567890",
            "transactionRef": "0000000000",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "statusWebHook": 0,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data37"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data37": {
        "title": "CreateDirectDebit-Success",
        "example": {
          "mandateStatus": "pending",
          "mandateID": "MAN1234567890",
          "transactionRef": "0000000000",
          "validTill": "yyyyMMddhhttss",
          "expiryMinutes": 9,
          "statusWebHook": 0,
          "authDetails": [
            {
              "type": "otp",
              "label": "6-digit OTP",
              "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
            },
            {
              "type": "password",
              "label": "internet banking password",
              "Message": "Kindly enter your internet banking password"
            }
          ]
        },
        "type": "object",
        "properties": {
          "mandateStatus": {
            "type": "string"
          },
          "mandateID": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          },
          "validTill": {
            "type": "string"
          },
          "expiryMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "statusWebHook": {
            "type": "integer",
            "format": "int32"
          },
          "authDetails": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuthDetail"
            }
          }
        },
        "required": [
          "mandateStatus",
          "mandateID",
          "transactionRef",
          "validTill",
          "expiryMinutes",
          "statusWebHook",
          "authDetails"
        ]
      },
      "UpdateDirectDebitRequest": {
        "title": "UpdateDirectDebitRequest",
        "example": {
          "description": "Monthly Subscription for Netflix",
          "sourceAccount": "9876544510",
          "sourceAccountName": "Solomon Grundy",
          "maximumAmount": 10000,
          "maximumTransactions": 10,
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to Ado",
          "startDate": "2018-12-13",
          "endDate": "2019-12-13",
          "frequency": "daily|weekly|monthly",
          "merchantCurrency": "NGN",
          "merchantAccount": "0123456789",
          "merchantAccountName": "Some Services Limited",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/"
        },
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "maximumAmount": {
            "type": "integer",
            "format": "int32"
          },
          "maximumTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "merchantCurrency": {
            "type": "string"
          },
          "merchantAccount": {
            "type": "string"
          },
          "merchantAccountName": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "sourceAccount",
          "sourceAccountName",
          "maximumAmount",
          "maximumTransactions",
          "sourceCurrency",
          "sourceNarration",
          "startDate",
          "endDate",
          "frequency",
          "merchantCurrency",
          "merchantAccount",
          "merchantAccountName",
          "statusWebHook"
        ]
      },
      "UpdateDirectDebit-Success": {
        "title": "UpdateDirectDebit-Success",
        "example": {
          "status": "00",
          "message": "Kindly enter the OTP sent to ****1412 to complete the transaction",
          "data": {
            "madateStatus": "pending",
            "mandateID": "MAN1234567890",
            "transactionRef": "0000000000",
            "validTill": "yyyyMMddhhttss",
            "expiryMinutes": 9,
            "statusWebHook": 0,
            "authDetails": [
              {
                "type": "otp",
                "label": "6-digit OTP",
                "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
              },
              {
                "type": "password",
                "label": "internet banking password",
                "Message": "Kindly enter your internet banking password"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data38"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data38": {
        "title": "UpdateDirectDebit-Success",
        "example": {
          "madateStatus": "pending",
          "mandateID": "MAN1234567890",
          "transactionRef": "0000000000",
          "validTill": "yyyyMMddhhttss",
          "expiryMinutes": 9,
          "statusWebHook": 0,
          "authDetails": [
            {
              "type": "otp",
              "label": "6-digit OTP",
              "Message": "Kindly enter the OTP sent to ****1412 to complete the transaction"
            },
            {
              "type": "password",
              "label": "internet banking password",
              "Message": "Kindly enter your internet banking password"
            }
          ]
        },
        "type": "object",
        "properties": {
          "madateStatus": {
            "type": "string"
          },
          "mandateID": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          },
          "validTill": {
            "type": "string"
          },
          "expiryMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "statusWebHook": {
            "type": "integer",
            "format": "int32"
          },
          "authDetails": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuthDetail"
            }
          }
        },
        "required": [
          "madateStatus",
          "mandateID",
          "transactionRef",
          "validTill",
          "expiryMinutes",
          "statusWebHook",
          "authDetails"
        ]
      },
      "GetDirectDebit-Success": {
        "title": "GetDirectDebit-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "mandate_status": "valid",
            "referenceId": "ABCD12345678901234567890",
            "mandateId": "MAN1234567890",
            "description": "Payment for Services of SSL",
            "sourceAccount": "9876543210",
            "sourceAccountName": "Solomon Grundy",
            "maximumAmount": 10000,
            "maximumTransactions": 10,
            "sourceCurrency": "NGN",
            "sourceNarration": "Transfer to Ado",
            "next_possible_charge_date": "2014-11-10",
            "startDate": "2018-12-13",
            "endDate": "2019-12-13",
            "frequency": "daily|weekly|monthly",
            "merchantCurrency": "NGN",
            "merchantAccount": "0123456789",
            "merchantAccountName": "Some Services Limited",
            "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data39"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data39": {
        "title": "GetDirectDebit-Success",
        "example": {
          "mandate_status": "valid",
          "referenceId": "ABCD12345678901234567890",
          "mandateId": "MAN1234567890",
          "description": "Payment for Services of SSL",
          "sourceAccount": "9876543210",
          "sourceAccountName": "Solomon Grundy",
          "maximumAmount": 10000,
          "maximumTransactions": 10,
          "sourceCurrency": "NGN",
          "sourceNarration": "Transfer to Ado",
          "next_possible_charge_date": "2014-11-10",
          "startDate": "2018-12-13",
          "endDate": "2019-12-13",
          "frequency": "daily|weekly|monthly",
          "merchantCurrency": "NGN",
          "merchantAccount": "0123456789",
          "merchantAccountName": "Some Services Limited",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "mandate_status": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "mandateId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sourceAccount": {
            "type": "string"
          },
          "sourceAccountName": {
            "type": "string"
          },
          "maximumAmount": {
            "type": "integer",
            "format": "int32"
          },
          "maximumTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "sourceNarration": {
            "type": "string"
          },
          "next_possible_charge_date": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "merchantCurrency": {
            "type": "string"
          },
          "merchantAccount": {
            "type": "string"
          },
          "merchantAccountName": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "mandate_status",
          "referenceId",
          "mandateId",
          "description",
          "sourceAccount",
          "sourceAccountName",
          "maximumAmount",
          "maximumTransactions",
          "sourceCurrency",
          "sourceNarration",
          "next_possible_charge_date",
          "startDate",
          "endDate",
          "frequency",
          "merchantCurrency",
          "merchantAccount",
          "merchantAccountName",
          "statusWebHook",
          "expansionFields"
        ]
      },
      "CancelDirectDebit-Success": {
        "title": "CancelDirectDebit-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": {
            "mandate_status": "cancelled",
            "next_possible_charge_date": "null",
            "referenceId": "ABCD12345678901234567890",
            "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data40"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data40": {
        "title": "CancelDirectDebit-Success",
        "example": {
          "mandate_status": "cancelled",
          "next_possible_charge_date": "null",
          "referenceId": "ABCD12345678901234567890",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "mandate_status": {
            "type": "string"
          },
          "next_possible_charge_date": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "mandate_status",
          "next_possible_charge_date",
          "referenceId",
          "statusWebHook",
          "expansionFields"
        ]
      },
      "PayDirectDebitRequest": {
        "title": "PayDirectDebitRequest",
        "example": {
          "amount": "2000"
        },
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          }
        },
        "required": [
          "amount"
        ]
      },
      "Data41": {
        "title": "PayDirectDebit-Mandateinvalid",
        "example": {
          "mandate_status": "active"
        },
        "type": "object",
        "properties": {
          "mandate_status": {
            "type": "string"
          }
        },
        "required": [
          "mandate_status"
        ]
      },
      "PayDirectDebit-Success": {
        "title": "PayDirectDebit-Success",
        "example": {
          "status": "00",
          "message": "Payment successful",
          "data": {
            "mandate_status": "valid",
            "referenceId": "ABCD12345678901234567890",
            "amountDebited": "2000",
            "next_possible_charge_date": "2014-11-10",
            "transactionRef": "0000000000",
            "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
            "expansionFields": [
              {
                "id": "Some random ID",
                "description": "Some random text",
                "type": "Some random type",
                "value": "Some value"
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data42"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data42": {
        "title": "PayDirectDebit-Success",
        "example": {
          "mandate_status": "valid",
          "referenceId": "ABCD12345678901234567890",
          "amountDebited": "2000",
          "next_possible_charge_date": "2014-11-10",
          "transactionRef": "0000000000",
          "statusWebHook": "https://merchantfeedback.merchant.com/status/ABCD12345678901234567890/",
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "mandate_status": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "amountDebited": {
            "type": "string"
          },
          "next_possible_charge_date": {
            "type": "string"
          },
          "transactionRef": {
            "type": "string"
          },
          "statusWebHook": {
            "type": "string"
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "mandate_status",
          "referenceId",
          "amountDebited",
          "next_possible_charge_date",
          "transactionRef",
          "statusWebHook",
          "expansionFields"
        ]
      },
      "PayDirectDebit-Mandateinvalid": {
        "title": "PayDirectDebit-Mandateinvalid",
        "example": {
          "status": "13",
          "message": "amount to large",
          "data": {
            "mandate_status": "active"
          }
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/definitions/Data41"
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "ReportaFraudRequest": {
        "title": "ReportaFraudRequest",
        "example": {
          "reportingReference": "0091234",
          "customerId": "0091234",
          "accountNumber": "5050099234",
          "BVN": "22142212345",
          "phoneNumber": "08021234567",
          "email": "customer.name@example.com",
          "fraudCategory": "SIM Swap",
          "fraudDescription": "A description too long to provide"
        },
        "type": "object",
        "properties": {
          "reportingReference": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "BVN": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fraudCategory": {
            "type": "string"
          },
          "fraudDescription": {
            "type": "string"
          }
        },
        "required": [
          "reportingReference",
          "customerId",
          "accountNumber",
          "BVN",
          "phoneNumber",
          "email",
          "fraudCategory",
          "fraudDescription"
        ]
      },
      "FraudCategories-Success": {
        "title": "FraudCategories-Success",
        "example": {
          "status": "00",
          "message": "The process was completed successfully",
          "data": [
            {
              "code": "01",
              "name": "Identity theft"
            }
          ],
          "expansionFields": [
            {
              "id": "Some random ID",
              "description": "Some random text",
              "type": "Some random type",
              "value": "Some value"
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data46"
            }
          },
          "expansionFields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpansionField"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data",
          "expansionFields"
        ]
      },
      "Data46": {
        "title": "FraudCategories-Success",
        "example": {
          "code": "01",
          "name": "Identity theft"
        },
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "GetBillpaymentItems": {
        "title": "GetBillpaymentItems",
        "example": {
          "status": "00",
          "message": "SUCCESSFUL",
          "data": [
            {
              "billingSystemId": "1",
              "categoryId": "1",
              "billerId": "1",
              "billPaymentProductId": "1",
              "billPaymentProductName": "Electricity",
              "fixedOrVariableAmount": "1000"
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data47"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data47": {
        "title": "GetBillpaymentItems",
        "example": {
          "billingSystemId": "1",
          "categoryId": "1",
          "billerId": "1",
          "billPaymentProductId": "1",
          "billPaymentProductName": "Electricity",
          "fixedOrVariableAmount": "1000"
        },
        "type": "object",
        "properties": {
          "billingSystemId": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "billerId": {
            "type": "string"
          },
          "billPaymentProductId": {
            "type": "string"
          },
          "billPaymentProductName": {
            "type": "string"
          },
          "fixedOrVariableAmount": {
            "type": "string"
          }
        },
        "required": [
          "billingSystemId",
          "categoryId",
          "billerId",
          "billPaymentProductId",
          "billPaymentProductName",
          "fixedOrVariableAmount"
        ]
      },
      "GetBillCategories": {
        "title": "GetBillCategories",
        "example": {
          "status": "00",
          "message": "SUCCESSFUL",
          "data": [
            {
              "billingSystemId": "1",
              "categoryName": "Electricity",
              "categoryDescription": "Electricity"
            },
            {
              "billingSystemId": "2",
              "categoryName": "Cable TV",
              "categoryDescription": "Cable tv subscriptions"
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data48"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data48": {
        "title": "GetBillCategories",
        "example": {
          "billingSystemId": "1",
          "categoryName": "Electricity",
          "categoryDescription": "Electricity"
        },
        "type": "object",
        "properties": {
          "billingSystemId": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "categoryDescription": {
            "type": "string"
          }
        },
        "required": [
          "billingSystemId",
          "categoryName",
          "categoryDescription"
        ]
      },
      "GetBiller": {
        "title": "GetBiller",
        "example": {
          "status": "00",
          "message": "SUCCESSFUL",
          "data": [
            {
              "categoryId": "1",
              "billerCategory": "Electricity",
              "categoryDescription": "Electricity Token",
              "billerId": "1",
              "nameOfBiller": "EKDEC",
              "customerId": "1",
              "currency": "NAIRA"
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data49"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data49": {
        "title": "GetBiller",
        "example": {
          "categoryId": "1",
          "billerCategory": "Electricity",
          "categoryDescription": "Electricity Token",
          "billerId": "1",
          "nameOfBiller": "EKDEC",
          "customerId": "1",
          "currency": "NAIRA"
        },
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "billerCategory": {
            "type": "string"
          },
          "categoryDescription": {
            "type": "string"
          },
          "billerId": {
            "type": "string"
          },
          "nameOfBiller": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        },
        "required": [
          "categoryId",
          "billerCategory",
          "categoryDescription",
          "billerId",
          "nameOfBiller",
          "customerId",
          "currency"
        ]
      },
      "GetBillingSystems": {
        "title": "GetBillingSystems",
        "example": {
          "status": "00",
          "message": "SUCCESSFUL",
          "data": [
            {
              "billingSystemId": "1",
              "billingaSystemName": null
            }
          ]
        },
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Data50"
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "Data50": {
        "title": "GetBillingSystems",
        "example": {
          "billingSystemId": "1",
          "billingaSystemName": null
        },
        "type": "object",
        "properties": {
          "billingSystemId": {
            "type": "string"
          },
          "billingaSystemName": {
            "type": "string"
          }
        },
        "required": [
          "billingSystemId",
          "billingaSystemName"
        ]
      }
    },
    "tags": [
      {
        "name": "Authorization"
      },
      {
        "name": "Meta"
      },
      {
        "name": "Branch",
        "description": "These endpoints retrieve branch information depending on the request parameters for specific branch(es) or getting all branches for a bank or financial institution. \r\nAll the endpoints return the same response payload. \r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|branchId| string |`Required` A unique identifier for the branch |\r\nbranchName|string |`Required` The name of the branch|\r\n|branchType | string |`Required` The type of branch such as `Full branch`, `Mini branch`, `E-branch`, `Agency`, etc. |\r\n|description | string |`Required` The description given to the branch. |\r\n|location||`Required`|\r\n|street| string |`Required` The street name where the branch is located |\r\ncity|string |`Required` The city name where the branch is located|\r\n|latitude| string |`Required` The latitude coordinate of the branch |\r\n|longitude|string |`Required` The longitude coordinate of the branch|\r\n|description | string |`Required` The description given to the branch. |\r\n|contactInfo| |`Required` A collection of contact information fields|\r\n|description| string |`Required` A description of the contact information type such as `Customer Service Email`, `Direct Switch Board Number` |\r\n|type| string |`Required` Type of contact information such as `email`, `telephone`, `telex` |\r\n|value| string |`Required` The contact information handle |\r\n"
      },
      {
        "name": "ATM",
        "description": "These endpoints retrieve ATM data depending on the request parameters for specific ATM(s) or getting all ATM for a bank or financial institution. \r\nAll the endpoints return the same response payload. \r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|atmId| string |`Required` A unique identifier for the ATM |\r\n|terminalId|string |`Required` Terminal ID of the ATM as recognized on the ISO network|\r\n|branchID|string |`Required` ID of the bank branch where the ATM is located or which manages the ATM|\r\n|description | string |`Required` The description given to the ATM. |\r\n|location||`Required`|\r\n|street| string |`Required` The street name where the ATM is located |\r\ncity|string |`Required` The city name where the ATM is located|\r\n|longitude| string |`Required` The longitude coordinate of the ATM |\r\n|latitude| string |`Required` The latitude coordinate of the ATM |\r\n|baseCurrency|string |`Required` A 3 character code that represents the currency. Currently set at `NGN`|\r\n|minimumCashAmount|number |`Optional`Minimum amount that the ATM can dispense. For example, `N500`|\r\n|ATMServices|string |`Required` The different services that the ATM supports|\r\n|CashWithdrawal|string |`Optional` If present, the ATM can dispense cash|\r\n|PINChange|string |`Optional` Terminal allows PIN change|\r\n|MobilePhoneTopUp|string |`Optional` Airtime top-up can be done on this terminal|\r\n|QuickTeller|string |`Optional` Quickteller services are supported on the terminal|\r\n|Balance|string |`Optional` Account balance can be checked on this ATM|\r\n|MiniStatement|string |`Optional` Terminal supports printing of mini statements|\r\n"
      },
      {
        "name": "Agency",
        "description": "These endpoints retrieve agent information depending on the request parameters for specific agent(s) or getting all agents for a bank or financial institution. \r\nAll the endpoints return the same response payload. \r\n\r\n\r\n#### Response Body Fields\r\n\r\n| Parameter |Type |Description |\r\n|--|--|--|\r\n| agentId |string |`Required` This is the unique id of the agent. |\r\n| agentName |string |`Required` This is the name of the agent. |\r\n| agentType |string |`Required` This is the agent type. |\r\n| location | |`Required` |\r\n| street |string |`Required` This is the street the agent is located. |\r\n| city |string |`Required` This is the city the agent is located. |\r\n| state |string |`Required` This is the state the agent is located. |\r\n| longitude |number |` Optional ` This is the geographic coordinate of the agent that specifies the east–west position. |\r\n| latitude |number |`Optional` This is the geographic coordinate of the agent that specifies the north–south position. |\r\n| phoneNumber |string |`Optional` This is the phone number of the agent. |"
      },
      {
        "name": "POS",
        "description": "These endpoints retrieve Point of Sales (POS) data depending on the request parameters for specific POS terminals(s) or getting all POS for a bank or financial institution. All the endpoints return the same response payload.\r\n\r\n#### Response Parameters\r\n\r\n| Parameter|Type |Description |\r\n|--|--|--|\r\n|terminalID |string |`Required` The terminal ID of the POS device|\r\n|merchantID |string |`Required` The unique identifier for the merchant who owns the POS device|\r\n|merchantName |string |`Required` The name of the merchant|\r\n|email |string |`Optional` The email address of the merchant|\r\n|phone |string |`Required` The mobile phone number of the merchant|\r\n|dateDeployed |date |`Optional` The date at which the terminal was deployed|\r\n|currency |string |`Required` The 3-character code of the currency that the POS terminal supports. Currently set at `NGN`|\r\n|ptsp |string |`Required` The name of the POS terminal service provider|\r\n|status |string |`Required` The status of the POS terminal such as `Active` or `Inactive`|\r\n|location||`Required`|\r\n|street| string |`Required` The street name where the branch is located |\r\ncity|string |`Required` The city name where the branch is located|\r\n|latitude| string |`Required` The latitude coordinate of the branch |\r\n|longitude|string |`Required` The longitude coordinate of the branch|\r\n|description | string |`Required` The description given to the branch.\r\n"
      },
      {
        "name": "Customer",
        "description": "These endpoints retrieve the customer information from a bank by specifying the customer ID or other forms of unique identifiers such as BVN, phone, and email. \r\nAll the endpoints return the same response payload. \r\n\r\n#### Response Body Fields\r\n\r\n| Field |Type |Description |\r\n| ----------- | ----------- | ----------- |\r\n|customerID|string|`Required` Unique Customer ID as defined by the Bank for the customer|\r\n|customerName|`Required`|\r\n|firstName|string|`Required` First name of the customer|\r\n|lastName|string|`Required` Last name or surname of the customer |\r\n|otherNames|string|`Optional` Middle name of customer|\r\n|bvn|string|`Required` 11 digital Bank Verification Number|\r\n|dateOfBirth|date|`Required` Date of birth in `DDMMYYYY` format|\r\n|email|string|`Optional` Email of customer|\r\n|phone|string|`Required` Mobile phone number of customer|\r\n|numberOfAccounts|number|`Required` Number of accounts the customer has in the bank|\r\n|type|string|`Required` Type of customer such as `individual`, `corporate`, `SME`|\r\n|startDateOfRelationship|date|`Required` The date customer opened his/her first account bank in `DDMMYYYY` format|\r\n|status|string|`Required` If customer is `active`, `inactive`, or `dormant`. Active customers have done a transaction in the last 6 months|\r\n|customerAddress||`Required`|\r\n|street|string|`Required` Street address|\r\n|city|string|`Required` City|\r\n|state|string|`Required` State|\r\n|country|string|`Required` Country|\r\n|postalCode|string|`Optional` post code|\r\n|identity||`Required`|\r\n|idNumber|string|`Required` Unique number identifying the ID type|\r\n|idType|string|`Required` Type such as passport, `driver’s license`, `voters card`, `national identification`, `others`|\r\n|countryOfIssue|string|`Required` Country where the identification document was issued|\r\n|expiryDate|date|`Required` Expiry date in in `DDMMYYYY` format|\t    \r\n"
      },
      {
        "name": "Accounts",
        "description": "These endpoints retrieve account information depending on the request parameters for specific account or getting all accounts for a specific user.\r\n\r\n`These endpoints support paging`\r\n\r\n## Response Body Fields\r\n\r\n| Field               | Type   | Description                                                                                |\r\n| ------------------- | ------ | ------------------------------------------------------------------------------------------ |\r\n| accountNumber       | string | `Required` The type of the account                                                         |\r\n| customerID          | string | `Required` The name of the account type                                                    |\r\n| accountName         | string | `Required` The minimum balance the account can hold                                        |\r\n| currency            | string | `Required` A 3 character code that represents the currency                                 |\r\n| accountOpeningDate  | date   | `Required` The date on which the account was opened                                        |\r\n| lastTransactionDate | date   | `Required` The last time a transaction, initiated by the customer, was done on the account |\r\n| accountType         | string | `Required` The type of account                                                             |\r\n| bvn                 | number | `Required` Bank Verification Number                                                        |\r\n| fullname            | string | `Required` The full name of the customer                                                   |\r\n| phoneNumber         | number | `Optional` Mobile phone                                                                    |\r\n| email               | string | `Optional` Email tied to the account                                                       |\r\n| status              | string | `Required` The status of the account; `active`, `inactive`, `dormant`                      |"
      },
      {
        "name": "Transactions",
        "description": "These endpoints are used to get transaction data, mostly known as account statement, for customers who have authorized their accounts to be accessed by the service provider. The endpoints also support transactions such as transfer to accounts within the same bank or to other banks. \r\n\r\nInterbank transfers are routed through whatever back-haul Payment Service Provider, PSP, the bank or financial institution may decide to use. "
      },
      {
        "name": "Direct Debit",
        "description": "Direct debit is a service that allows Merchants and Billers to pull money from a customer’s account for a service rendered to the Customer.\r\n\r\nThese endpoints are used to create, modify, apply, and list mandates or tokenized persistent authorizations against a customer's account.\r\n\r\nA direct debit mandate must first be set up on a customer account before scheduled, or Ad-hoc transactions can happen without further active/in-band authorization by the customer. At the time the mandate is set up, customers can determine the maximum amount a mandate can allow, how long the mandate should be in force, and if the amount should be fixed or varied."
      },
      {
        "name": "Fraud",
        "description": "This endpoint is used to report fraud incidences directly to the bank or financial institution. It may sometimes be difficult to get account holders authenticated therefore identifying information are not mandatory. However, banks may not process these requests online real time and its for informational purposes only."
      },
      {
        "name": "BillPayment",
        "description": "These endpoint allowing a customer of a financial institution to transfer money from their transaction or credit card account to a creditor or vendor such as a public utility, department store or an individual to be credited against a specific account.\nThese payments are typically executed electronically as a direct deposit through a national payment system, operated by the banks or in conjunction with the government.\n\n----------\n#### Response Body Fields\n\n| Field |Type |Description |\n| ----------- | ----------- | ----------- |\n| categoryId|string|`Required` A unique Id provided by the bank for the specific billing category `1213123`| \n| billerCategory|string|`Required` The category a biller belongs to  `Electricity`| \n| categoryDescription|string|`Required` Description given for a category `Electricity Token`| \n| billerId| |`Required` A unique Id provided by the bank for the specific biller  `5` | \n| type|string|`Required` The type of identity bit. Examples are `OTP`, `Password`, `Card`| \n| nameOfBiller|string|`Required` The name of the biller `EKDEC` | \n| billPaymentProductName|string|`Required` The name of product under a biller `Electricity` | \n| customerId|string|`Required` The unique identifier for a customer as defined by a Bank `5`| \n| billingSystemId|string|`Required` A unique Id for a specific billing system `7885`| \n| billPaymentProductId|string|`Required` A unique Id for a specific product under a biller `75`| \n| fixedOrVariableAmount|string|`Required` Amount to be paid, maybe a fixed or a variable amount `2500`|"
      }
    ]
}